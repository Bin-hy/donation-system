{"version":3,"file":"js/app.6c99b512.js","mappings":"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","sources":["webpack://template-admin/./src/utils/LoadingIcon.vue","webpack://template-admin/./src/utils/LoadingIcon.vue?dd47","webpack://template-admin/./src/components/NavBar.vue","webpack://template-admin/./src/components/NavBar.vue?01fd","webpack://template-admin/./src/views/LoginPage.vue","webpack://template-admin/./src/views/LoginPage.vue?fce3","webpack://template-admin/./src/App.vue","webpack://template-admin/./src/App.vue?7ccd","webpack://template-admin/./src/views/HomePage.vue","webpack://template-admin/./src/views/HomePage.vue?150d","webpack://template-admin/./src/views/UserList.vue","webpack://template-admin/./src/views/UserList.vue?1332","webpack://template-admin/./src/views/UserMessages.vue","webpack://template-admin/./src/views/UserMessages.vue?a70d","webpack://template-admin/./src/views/NewsList.vue","webpack://template-admin/./src/views/NewsList.vue?e57f","webpack://template-admin/./src/views/ProjectList.vue","webpack://template-admin/./src/views/ProjectList.vue?b029","webpack://template-admin/./src/views/ProjectIncome.vue","webpack://template-admin/./src/views/ProjectIncome.vue?14f0","webpack://template-admin/./src/views/ProjectReview.vue","webpack://template-admin/./src/views/ProjectReview.vue?1a58","webpack://template-admin/./src/views/BarragePage.vue","webpack://template-admin/./src/views/BarragePage.vue?1056","webpack://template-admin/./src/views/CarouselList.vue","webpack://template-admin/./src/views/CarouselList.vue?a6be","webpack://template-admin/./src/views/AnnouncementList.vue","webpack://template-admin/./src/views/AnnouncementList.vue?7473","webpack://template-admin/./src/router/index.js","webpack://template-admin/./src/main.js","webpack://template-admin/webpack/bootstrap","webpack://template-admin/webpack/runtime/chunk loaded","webpack://template-admin/webpack/runtime/compat get default export","webpack://template-admin/webpack/runtime/define property getters","webpack://template-admin/webpack/runtime/global","webpack://template-admin/webpack/runtime/hasOwnProperty shorthand","webpack://template-admin/webpack/runtime/make namespace object","webpack://template-admin/webpack/runtime/node module decorator","webpack://template-admin/webpack/runtime/publicPath","webpack://template-admin/webpack/runtime/jsonp chunk loading","webpack://template-admin/webpack/startup"],"sourcesContent":["<template>\r\n  <img src=\"@/assets/feekback-icon.png\" alt=\"warning-icon\" width=\"30\" height=\"30\" />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n</style>\r\n","import { render } from \"./LoadingIcon.vue?vue&type=template&id=1896da3b\"\nconst script = {}\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"admin-container\">\n    <!-- 左侧导航栏 -->\n    <div class=\"left-nav\">\n      <!-- 头部：Logo 和项目名称 -->\n      <div class=\"nav-header\">\n        <img class=\"logo\" src=\"@/assets/logo.png\" alt=\"Logo\" />\n        <span class=\"project-name\" v-if=\"!isCollapse\">{{ projectName }}</span>\n      </div>\n\n      <!-- 菜单 -->\n      <el-menu\n          default-active=\"/\"\n          class=\"el-menu-vertical\"\n          :collapse=\"isCollapse\"\n          @open=\"handleOpen\"\n          @close=\"handleClose\"\n          router\n          background-color=\"#1f2d3d\"\n          text-color=\"#fff\"\n          active-text-color=\"#ffd04b\"\n      >\n        <!-- 首页 -->\n        <el-menu-item index=\"/\">\n          <el-icon><homeFilled /></el-icon>\n          <span v-if=\"!isCollapse\">首页</span>\n        </el-menu-item>\n\n        <!-- 用户管理 -->\n        <el-sub-menu index=\"user\">\n          <template #title>\n            <el-icon><userFilled /></el-icon>\n            <span v-if=\"!isCollapse\">用户管理</span>\n          </template>\n          <!-- 二级菜单 -->\n          <el-menu-item index=\"/user/list\">用户列表</el-menu-item>\n          <el-menu-item index=\"/user/messages\">用户消息</el-menu-item>\n        </el-sub-menu>\n\n        <!-- 新闻管理 -->\n        <el-sub-menu index=\"news\">\n          <template #title>\n            <el-icon><document /></el-icon>\n            <span v-if=\"!isCollapse\">新闻管理</span>\n          </template>\n          <!-- 二级菜单 -->\n          <el-menu-item index=\"/news/list\">新闻列表</el-menu-item>\n        </el-sub-menu>\n\n        <!-- 项目管理 -->\n        <el-sub-menu index=\"project\">\n          <template #title>\n            <el-icon><MessageBox /></el-icon>\n            <span v-if=\"!isCollapse\">项目管理</span>\n          </template>\n          <!-- 二级菜单 -->\n          <el-menu-item index=\"/project/list\">项目列表</el-menu-item>\n          <el-menu-item index=\"/project/income\">捐款明细</el-menu-item> <!-- 新增 -->\n          <el-menu-item index=\"/project/review\">项目评价</el-menu-item> <!-- 新增 -->\n        </el-sub-menu>\n\n        <!-- 项目管理 -->\n        <el-sub-menu index=\"barrage\">\n          <template #title>\n            <el-icon><DataLine /></el-icon>\n            <span v-if=\"!isCollapse\">弹幕管理</span>\n          </template>\n          <!-- 二级菜单 -->\n          <el-menu-item index=\"/project/barrage\">弹幕消息</el-menu-item>\n        </el-sub-menu>\n\n\n        <!-- 新增：其他配置 -->\n        <el-sub-menu index=\"other-config\">\n          <template #title>\n            <el-icon><Setting /></el-icon>\n            <span v-if=\"!isCollapse\">其他配置</span>\n          </template>\n          <!-- 二级菜单 -->\n          <el-menu-item index=\"/other-config/carousel\">轮播管理</el-menu-item>\n          <el-menu-item index=\"/other-config/announcement\">公示信息管理</el-menu-item>\n        </el-sub-menu>\n      </el-menu>\n    </div>\n\n    <!-- 右侧内容区域 -->\n    <div class=\"right-content\">\n      <!-- 顶部导航栏 -->\n      <div class=\"top-navbar\">\n        <!-- 折叠按钮 -->\n        <div class=\"collapse-btn\" @click=\"toggleCollapse\">\n          <el-icon :size=\"20\">\n            <expand v-if=\"isCollapse\" />\n            <fold v-else />\n          </el-icon>\n        </div>\n\n        <!-- 面包屑 -->\n        <el-breadcrumb separator=\"/\">\n          <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\n          <el-breadcrumb-item>{{ currentRouteTitle }}</el-breadcrumb-item>\n        </el-breadcrumb>\n\n        <!-- 右侧用户信息 -->\n        <div class=\"right-section\">\n          <!-- 主题切换 -->\n          <div class=\"theme-switch\">\n            <el-switch\n                v-model=\"isDark\"\n                :active-icon=\"Moon\"\n                :inactive-icon=\"Sunny\"\n                inline-prompt\n                @change=\"toggleDark\"\n            />\n          </div>\n\n          <!-- 铃铛图标 -->\n          <el-badge :value=\"unreadCount\" :max=\"99\" :hidden=\"unreadCount === 0\" style=\"margin-right: 10px\">\n            <el-icon :size=\"25\" class=\"bell-icon\" @click=\"handleBellClick\">\n              <bell />\n            </el-icon>\n          </el-badge>\n\n          <!-- 用户头像和气泡菜单 -->\n          <el-popover\n              placement=\"bottom\"\n              trigger=\"hover\"\n              :width=\"100\"\n              popper-class=\"user-popover\"\n          >\n            <template #reference>\n              <div class=\"user-info\">\n                <el-avatar :size=\"40\" :src=\"user.avatar\" />\n                <span class=\"username\">{{ user.name }}</span>\n                <el-icon :size=\"16\" class=\"arrow-icon\">\n                  <arrow-down />\n                </el-icon>\n              </div>\n            </template>\n\n            <!-- 气泡菜单内容 -->\n            <div class=\"popover-content\">\n<!--              <div class=\"popover-item\" @click=\"handleProfile\">-->\n<!--                <el-icon><userFilled /></el-icon>-->\n<!--                <span>个人中心</span>-->\n<!--              </div>-->\n              <div class=\"popover-item\" @click=\"handleMessages\">\n                <el-icon><message /></el-icon>\n                <span>消息列表</span>\n              </div>\n              <div class=\"popover-item\" @click=\"handleLogout\">\n                <el-icon><switch-button /></el-icon>\n                <span>退出登录</span>\n              </div>\n            </div>\n          </el-popover>\n        </div>\n      </div>\n\n      <!-- 内容区域 -->\n      <div class=\"main-content\">\n        <router-view></router-view> <!-- 路由内容 -->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\n// eslint-disable-next-line no-unused-vars\nimport { Sunny, Moon, Bell, UserFilled, Message, SwitchButton, ArrowDown } from \"@element-plus/icons-vue\";\n// eslint-disable-next-line no-unused-vars\nimport { HomeFilled, MessageBox, Document, Expand, Fold , DataLine,Setting } from \"@element-plus/icons-vue\";\nimport { useDark, useToggle } from \"@vueuse/core\";\nimport { ref, computed, onMounted } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport axios from \"axios\";\nimport {ElNotification} from \"element-plus\"; // 引入 axios\nimport LoadingIcon from '@/utils/LoadingIcon.vue'; // 引入自定义组件\n\n\n// 主题切换\nconst isDark = useDark();\nconst toggleDark = useToggle(isDark);\n\n// 模拟项目名称\nconst projectName = \"心阳管理系统\";\n\n// 用户数据\nconst user = ref({\n  name: \"\",\n  avatar: \"\",\n});\n\n// 左侧导航栏是否折叠\nconst isCollapse = ref(false);\n\n// 切换折叠状态\nconst toggleCollapse = () => {\n  isCollapse.value = !isCollapse.value;\n};\n\n// 菜单展开/折叠事件\nconst handleOpen = (key, keyPath) => {\n  console.log(\"菜单展开:\", key, keyPath);\n};\nconst handleClose = (key, keyPath) => {\n  console.log(\"菜单折叠:\", key, keyPath);\n};\n\n// 获取当前路由的 meta.title\nconst route = useRoute();\nconst currentRouteTitle = computed(() => {\n  return route.meta?.title || \"未知页面\"; // 如果 meta.title 不存在，返回默认值\n});\n\n// // 气泡菜单点击事件\n// const handleProfile = () => {\n//   console.log(\"点击了个人中心\");\n//   // 跳转到个人中心页面\n// };\n\nconst handleMessages = () => {\n  router.push(\"/user/messages\");\n};\n\nconst handleLogout = () => {\n  // 清除用户登录状态\n  localStorage.removeItem(\"token\");\n  // 跳转到登录页面\n  router.push(\"/login\");\n};\n\n// 未读消息数量\nconst unreadCount = ref(0);\n\n// 处理铃铛点击事件\nconst handleBellClick = () => {\n  // 跳转到消息列表页面\n  router.push(\"/user/messages\");\n  // 清除未读消息数量\n  unreadCount.value = 0;\n};\n\n// 检测 token 并获取用户数据\nconst router = useRouter();\n\nconst checkTokenAndFetchUser = async () => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    try {\n      // 直接调用 API 获取用户信息\n      const response = await axios.get('/admin/info', {\n        headers: {\n          Authorization: `Bearer ${token}`, // 携带 token\n        },\n      });\n      console.log(response.data.code)\n      // 更新用户信息\n      if (response.data.code === 200) {\n        user.value = {\n          name: response.data.data.nickname || '用户', // 使用昵称，如果没有则显示默认值\n          avatar: response.data.data.avatarUrl || 'https://pisiyi.oss-cn-beijing.aliyuncs.com/%E7%94%A8%E6%88%B7.png', // 使用头像，如果没有则显示默认值\n        };\n      } else {\n        console.error('获取用户信息失败:', response.data.msg);\n        handleLogout(); // 如果获取失败，执行退出登录\n      }\n    } catch (error) {\n      console.error('获取用户信息失败:', error);\n      handleLogout(); // 如果请求失败，执行退出登录\n    }\n  } else {\n    isLoggedIn.value = false; // 用户未登录\n  }\n};\n\n// 用户是否已登录\nconst isLoggedIn = ref(false);\n\n// WebSocket 实例\nlet socket = null;\nconst isConnected = ref(false);\n\n// 连接 WebSocket\nconst connectWebSocket = (url, uuid) => {\n  socket = new WebSocket(`${url}?uuid=${uuid}`);\n\n  socket.onopen = () => {\n    isConnected.value = true;\n    console.log('WebSocket 连接已建立');\n  };\n\n  socket.onmessage = (event) => {\n    console.log('收到消息:', event.data);\n    const message = JSON.parse(event.data);\n    if (message.type === \"Feedback\") {\n      unreadCount.value += 1; // 未读消息数量加 1\n\n      // 显示通知\n      ElNotification({\n        title: '新消息',\n        message: '接收到新的反馈消息',\n        icon: LoadingIcon,\n        duration: 3000, // 通知显示时间（毫秒）\n      });\n\n      // 播放提示音\n      const audio = new Audio(require('@/assets/notification-sound.mp3')); // 使用 @/assets 路径\n      audio.play().catch(error => {\n        console.error('播放提示音失败:', error);\n      });\n    }\n  };\n\n  socket.onclose = () => {\n    isConnected.value = false;\n    console.log('WebSocket 连接已关闭');\n    // 自动重连\n    setTimeout(() => {\n      connectWebSocket(url, uuid);\n    }, 3000); // 3 秒后重连\n  };\n\n  socket.onerror = (error) => {\n    console.error('WebSocket 错误:', error);\n  };\n};\n\n// 组件挂载时执行\nonMounted(() => {\n  checkTokenAndFetchUser();\n\n  // 检测 WebSocket 连接状态\n  if (!isConnected.value) {\n    const uuid = 12138; // 从 localStorage 获取 uuid，如果没有则使用默认值\n    connectWebSocket('ws://localhost:8080/websocket', uuid);\n  }\n\n  // 监听页面刷新事件\n  window.addEventListener('beforeunload', () => {\n    if (socket) {\n      socket.close(); // 页面刷新前关闭 WebSocket\n    }\n  });\n});\n</script>\n\n<style scoped>\n.admin-container {\n  display: flex;\n  height: 100vh;\n}\n\n.left-nav {\n  flex: 0 0 auto; /* 不伸缩，宽度由内容决定 */\n  transition: width 0.3s ease;\n  background-color: #1f2d3d; /* 固定深色背景 */\n  border-right: 1px solid #1f2d3d; /* 固定深色边框 */\n}\n\n.admin-container {\n  display: flex;\n  height: 100vh;\n}\n\n\n.right-content {\n  flex: 1; /* 占据剩余空间 */\n  overflow: hidden; /* 防止内容溢出 */\n}\n\n.nav-header {\n  display: flex;\n  align-items: center;\n  padding: 15px;\n  border-bottom: 1px solid #1f2d3d; /* 固定深色边框 */\n}\n\n.logo {\n  width: 30px;\n  height: 30px;\n  margin-right: 10px;\n}\n\n.project-name {\n  font-size: 18px;\n  font-weight: bold;\n  color: #fff; /* 固定白色文字 */\n  white-space: nowrap; /* 防止文字换行 */\n}\n\n.el-menu-vertical:not(.el-menu--collapse) {\n  width: 200px;\n}\n\n:deep(.el-menu) {\n  border-right: 1px solid #1f2d3d;\n}\n\n.right-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.top-navbar {\n  display: flex;\n  align-items: center;\n  padding: 10px 20px;\n  background-color: var(--el-bg-color);\n  border-bottom: 1px solid var(--el-border-color);\n}\n\n.collapse-btn {\n  margin-right: 20px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n}\n\n.right-section {\n  display: flex;\n  align-items: center;\n  margin-left: auto; /* 将右侧内容推到最右边 */\n}\n\n.theme-switch {\n  margin-right: 20px;\n}\n\n.bell-icon {\n  margin-right: -2px;\n  cursor: pointer;\n}\n\n.user-info {\n  margin-left: 10px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n}\n\n.username {\n  margin-left: 10px;\n  font-size: 16px;\n  font-weight: bold;\n  color: var(--el-text-color-primary);\n}\n\n.arrow-icon {\n  margin-left: 8px;\n  transition: transform 0.2s;\n}\n\n.user-info:hover .arrow-icon {\n  transform: rotate(180deg);\n}\n\n.main-content {\n  flex: 1;\n  padding: 20px;\n  overflow-y: auto; /* 允许滚动 */\n}\n\n/* 隐藏滚动条 */\n.main-content::-webkit-scrollbar {\n  display: none;\n}\n</style>\n\n<style>\n/* 全局样式 */\nbody {\n  transition: background-color 0.3s ease, color 0.3s ease;\n}\n\nbody.dark {\n  background-color: #1e1e1e;\n  color: #fff;\n}\n\n/* 气泡菜单样式 */\n.user-popover {\n  padding: 0 !important;\n}\n\n.popover-content {\n  padding: 8px 0;\n}\n\n.popover-item {\n  display: flex;\n  align-items: center;\n  padding: 8px 16px;\n  cursor: pointer;\n  font-size: 14px;\n}\n\n.popover-item:hover {\n  background-color: var(--el-bg-color-page);\n}\n\n.popover-item .el-icon {\n  margin-right: 8px;\n}\n</style>\n","import script from \"./NavBar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./NavBar.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./NavBar.vue?vue&type=style&index=0&id=0dd13d62&scoped=true&lang=css\"\nimport \"./NavBar.vue?vue&type=style&index=1&id=0dd13d62&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0dd13d62\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"container\">\r\n    <!-- 左侧登录表单 -->\r\n    <div class=\"forms-container\">\r\n      <form class=\"sign-in-form\" @submit.prevent=\"handleLogin\">\r\n        <h2 class=\"title\">登录</h2>\r\n        <div class=\"input-field\">\r\n          <img src=\"@/assets/username.png\" alt=\"用户图标\" class=\"icon\" />\r\n          <input type=\"text\" placeholder=\"用户名\" v-model=\"loginUsername\" />\r\n        </div>\r\n        <div class=\"input-field\">\r\n          <img src=\"@/assets/password.png\" alt=\"密码图标\" class=\"icon\" />\r\n          <input type=\"password\" placeholder=\"密码\" v-model=\"loginPassword\" />\r\n        </div>\r\n        <input type=\"submit\" value=\"立即登录\" class=\"btn solid\" />\r\n      </form>\r\n    </div>\r\n\r\n    <!-- 右侧四分之一圆圈和图片 -->\r\n    <div class=\"circle-container\">\r\n      <div class=\"circle\">\r\n        <img src=\"@/assets/login.png\" alt=\"登录图片\" class=\"image\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { ElNotification } from 'element-plus';\r\nimport axios from 'axios'; // 引入 axios 用于发送请求\r\nimport { getCurrentInstance } from 'vue';\r\n\r\n// 获取当前组件实例\r\n// eslint-disable-next-line no-unused-vars\r\nconst { proxy } = getCurrentInstance();\r\n\r\nconst router = useRouter();\r\n\r\n// 登录表单数据\r\nconst loginUsername = ref('');\r\nconst loginPassword = ref('');\r\n\r\n// 处理登录\r\nconst handleLogin = async () => {\r\n  if (!loginUsername.value || !loginPassword.value) {\r\n    ElNotification({\r\n      title: '提示',\r\n      message: '请输入用户名和密码',\r\n      type: 'warning',\r\n      position: 'top-right',\r\n      duration: 3000,\r\n    });\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await axios.post('/admin/login', {\r\n      username: loginUsername.value,\r\n      password: loginPassword.value,\r\n    });\r\n\r\n    // 解析返回的数据\r\n    const { code, message, data } = response.data;\r\n\r\n    // 登录成功处理\r\n    if (code === 200) {\r\n      // 存储 token 到本地\r\n      localStorage.setItem('token', data.token); // 使用 localStorage 持久化存储\r\n\r\n      ElNotification({\r\n        title: '成功',\r\n        message: '登录成功！',\r\n        type: 'success',\r\n        position: 'top-right',\r\n        duration: 1000,\r\n      });\r\n\r\n      // 连接 WebSocket，uuid 写死为 12138\r\n      proxy.$connectWebSocket('ws://localhost:8080/websocket', '12138');\r\n      // 跳转到首页\r\n      await router.push('/');\r\n    } else {\r\n      // 登录失败处理\r\n      ElNotification({\r\n        title: '错误',\r\n        message: message || '登录失败，请检查用户名和密码',\r\n        type: 'error',\r\n        position: 'top-right',\r\n        duration: 3000,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    // 请求失败处理\r\n    ElNotification({\r\n      title: '错误',\r\n      message: '请求失败，请检查网络或稍后重试',\r\n      type: 'error',\r\n      position: 'top-right',\r\n      duration: 3000,\r\n    });\r\n    console.error('登录请求失败:', error);\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 引入字体 */\r\n@import url(\"https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700;800&display=swap\");\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody,\r\ninput {\r\n  font-family: \"Poppins\", sans-serif;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n}\r\n\r\n/* 左侧登录表单容器 */\r\n.forms-container {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 20px;\r\n}\r\n\r\n/* 表单样式 */\r\nform {\r\n  width: 100%;\r\n  max-width: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 40px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n/* 标题 */\r\n.title {\r\n  font-size: 2.2rem;\r\n  color: #444;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* 输入框 */\r\n.input-field {\r\n  width: 100%;\r\n  background-color: #f0f0f0;\r\n  margin: 10px 0;\r\n  height: 55px;\r\n  border-radius: 55px;\r\n  display: grid;\r\n  grid-template-columns: 15% 85%;\r\n  padding: 0 0.4rem;\r\n  position: relative;\r\n}\r\n\r\n.input-field .icon {\r\n  width: 30px;\r\n  height: 30px;\r\n  margin-top: 12px;\r\n  margin-left: 15px;\r\n}\r\n\r\n.input-field input {\r\n  background: none;\r\n  outline: none;\r\n  border: none;\r\n  line-height: 1;\r\n  font-weight: 600;\r\n  font-size: 1.1rem;\r\n  color: #333;\r\n}\r\n\r\n.input-field input::placeholder {\r\n  color: #aaa;\r\n  font-weight: 500;\r\n}\r\n\r\n/* 按钮 */\r\n.btn {\r\n  width: 100%;\r\n  background-color: #409eff; /* 蓝色按钮 */\r\n  border: none;\r\n  outline: none;\r\n  height: 49px;\r\n  border-radius: 49px;\r\n  color: #fff;\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n  margin: 10px 0;\r\n  cursor: pointer;\r\n  transition: 0.5s;\r\n}\r\n\r\n.btn:hover {\r\n  background-color: #337ecc; /* 深蓝色悬停效果 */\r\n}\r\n\r\n/* 右侧四分之一圆圈容器 */\r\n.circle-container {\r\n  flex: 1;\r\n  position: relative;\r\n  background: linear-gradient(-45deg, #409eff 0%, #79bbff 100%); /* 蓝色渐变 */\r\n  clip-path: ellipse(100% 100% at 100% 50%); /* 桌面端：右侧半圆 */\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n/* 圆圈 */\r\n.circle {\r\n  width: 80%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n/* 图片 */\r\n.image {\r\n  width: 100%;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .container {\r\n    flex-direction: column; /* 改为垂直布局 */\r\n  }\r\n\r\n  .circle-container {\r\n    flex: none; /* 取消 flex 占据的空间 */\r\n    height: 200px; /* 设置固定高度 */\r\n    clip-path: ellipse(100% 100% at 50% 100%); /* 移动端：底部半圆 */\r\n    border-radius: 50% 50% 0 0; /* 顶部圆角 */\r\n  }\r\n\r\n  .circle {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .image {\r\n    width: 80%;\r\n    max-width: 200px; /* 限制图片大小 */\r\n  }\r\n\r\n  .forms-container {\r\n    flex: 1;\r\n    padding: 20px;\r\n  }\r\n\r\n  form {\r\n    padding: 20px; /* 减少内边距 */\r\n  }\r\n\r\n  .title {\r\n    font-size: 1.8rem; /* 缩小标题 */\r\n  }\r\n}\r\n</style>\r\n\r\n\r\n","import script from \"./LoginPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./LoginPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./LoginPage.vue?vue&type=style&index=0&id=4ed7079c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4ed7079c\"]])\n\nexport default __exports__","<template>\n  <!-- 如果当前路由是登录页面，则显示登录组件 -->\n  <LoginPage v-if=\"isLoginPage\" />\n  <!-- 否则显示导航栏和路由内容 -->\n  <template v-else>\n    <NavBar msg=\"Welcome to Your Vue.js App\" />\n  </template>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\nimport { useRoute } from 'vue-router';\nimport NavBar from './components/NavBar.vue';\nimport LoginPage from './views/LoginPage.vue'; // 引入登录页面组件\n\n// 获取当前路由\nconst route = useRoute();\n\n// 判断当前路由是否为登录页面\nconst isLoginPage = computed(() => route.path === '/login');\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  margin: 0;\n  padding: 0;\n}\n</style>\n","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=24a8c954&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"dashboard-container\">\r\n    <!-- 统计数据卡片 -->\r\n    <el-row :gutter=\"20\" class=\"stats-cards\">\r\n      <el-col :span=\"8\">\r\n        <el-card class=\"stat-card\">\r\n          <div class=\"stat-content\">\r\n            <img src=\"@/assets/user-icon.png\" alt=\"用户图标\" class=\"stat-icon\" />\r\n            <div>\r\n              <div class=\"stat-title\">用户总数</div>\r\n              <div class=\"stat-value\">{{ stats.userCount }}</div>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"8\">\r\n        <el-card class=\"stat-card\">\r\n          <div class=\"stat-content\">\r\n            <img src=\"@/assets/donation-icon.png\" alt=\"捐款图标\" class=\"stat-icon\" />\r\n            <div>\r\n              <div class=\"stat-title\">捐款总数</div>\r\n              <div class=\"stat-value\">¥{{ stats.donationTotal }}</div>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"8\">\r\n        <el-card class=\"stat-card\">\r\n          <div class=\"stat-content\">\r\n            <img src=\"@/assets/barrage-icon.png\" alt=\"弹幕图标\" class=\"stat-icon\" />\r\n            <div>\r\n              <div class=\"stat-title\">弹幕总数</div>\r\n              <div class=\"stat-value\">{{ stats.barrageCount }}</div>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 双折线图和排行榜 -->\r\n    <el-row :gutter=\"20\" class=\"charts-and-ranking\">\r\n      <!-- 双折线图 -->\r\n      <el-col :span=\"16\">\r\n        <el-card>\r\n          <div class=\"chart-title\">\r\n            近七日趋势\r\n            <el-button type=\"primary\" size=\"small\" @click=\"downloadChart('trendChart')\" style=\"float: right;\">\r\n              下载图表\r\n            </el-button>\r\n          </div>\r\n          <div ref=\"trendChartRef\" class=\"chart-container\"></div>\r\n        </el-card>\r\n      </el-col>\r\n\r\n      <!-- 排行榜 -->\r\n      <el-col :span=\"8\">\r\n        <el-card>\r\n          <div class=\"chart-title\">捐款总数 Top5</div>\r\n          <el-table :data=\"donationRanking\" style=\"width: 100%;height: 300px\">\r\n            <el-table-column prop=\"userRank\" label=\"排名\" width=\"80\" />\r\n            <el-table-column label=\"用户\">\r\n              <template #default=\"{ row }\">\r\n                <div style=\"display: flex; align-items: center;\">\r\n                  <img :src=\"row.avatar\" alt=\"用户头像\" style=\"width: 40px; height: 40px; border-radius: 50%; margin-right: 10px;\" />\r\n                  <span>{{ row.name }}</span>\r\n                </div>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"amount\" label=\"捐款金额\" align=\"right\">\r\n              <template #default=\"{ row }\">\r\n                ¥{{ row.amount }}\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 新增柱状图 -->\r\n    <el-row :gutter=\"20\" class=\"charts-and-ranking\">\r\n      <el-col :span=\"24\">\r\n        <el-card>\r\n          <div class=\"chart-title\">\r\n            近十日捐赠趋势图\r\n            <el-button type=\"primary\" size=\"small\" @click=\"downloadChart('donationChart')\" style=\"float: right;\">\r\n              下载图表\r\n            </el-button>\r\n          </div>\r\n          <div ref=\"donationChartRef\" class=\"chart-container\"></div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport * as echarts from 'echarts';\r\nimport axios from 'axios';\r\n\r\n// 统计数据\r\nconst stats = ref({\r\n  userCount: 0,\r\n  donationTotal: 0,\r\n  barrageCount: 0,\r\n});\r\n\r\n// 近七日趋势数据\r\nconst trendData = ref({\r\n  dates: [],\r\n  barrages: [],\r\n  newUsers: [],\r\n});\r\n\r\n// 近十日捐赠趋势数据\r\nconst donationTrendData = ref({\r\n  dates: [],\r\n  donations: [],\r\n});\r\n\r\n// 捐款排行榜数据\r\nconst donationRanking = ref([]);\r\n\r\n// 使用 ref 绑定 DOM 元素\r\nconst trendChartRef = ref(null); // 折线图容器\r\nconst donationChartRef = ref(null); // 柱状图容器\r\n\r\n// 获取令牌\r\nconst getToken = () => {\r\n  return localStorage.getItem('token'); // 从本地存储获取令牌\r\n};\r\n\r\n// 定义接口方法\r\nconst fetchStats = async () => {\r\n  try {\r\n    const token = getToken();\r\n    const response = await axios.get('/admin/dashboard/stats', {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`, // 添加令牌到请求头\r\n      },\r\n    });\r\n    if (response.status === 200 && response.data.code === 200) {\r\n      return response.data.data; // 返回数据部分\r\n    } else {\r\n      throw new Error(response.data.message || '请求失败');\r\n    }\r\n  } catch (error) {\r\n    console.error('获取统计数据失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst fetchTrendData = async () => {\r\n  try {\r\n    const token = getToken();\r\n    const response = await axios.get('/admin/dashboard/trend', {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`, // 添加令牌到请求头\r\n      },\r\n    });\r\n    if (response.status === 200 && response.data.code === 200) {\r\n      return response.data.data; // 返回数据部分\r\n    } else {\r\n      throw new Error(response.data.message || '请求失败');\r\n    }\r\n  } catch (error) {\r\n    console.error('获取趋势数据失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst fetchDonationTrendData = async () => {\r\n  try {\r\n    const token = getToken();\r\n    const response = await axios.get('/admin/dashboard/donation-trend', {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`, // 添加令牌到请求头\r\n      },\r\n    });\r\n    if (response.status === 200 && response.data.code === 200) {\r\n      return response.data.data; // 返回数据部分\r\n    } else {\r\n      throw new Error(response.data.message || '请求失败');\r\n    }\r\n  } catch (error) {\r\n    console.error('获取捐赠趋势数据失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst fetchDonationRanking = async () => {\r\n  try {\r\n    const token = getToken();\r\n    const response = await axios.get('/admin/dashboard/donation-ranking', {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`, // 添加令牌到请求头\r\n      },\r\n    });\r\n    if (response.status === 200 && response.data.code === 200) {\r\n      return response.data.data; // 返回数据部分\r\n    } else {\r\n      throw new Error(response.data.message || '请求失败');\r\n    }\r\n  } catch (error) {\r\n    console.error('获取捐款排行榜失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// 初始化折线图\r\nconst initTrendChart = () => {\r\n  if (trendChartRef.value) {\r\n    const trendChart = echarts.init(trendChartRef.value);\r\n    trendChart.setOption({\r\n      tooltip: {\r\n        trigger: 'axis',\r\n      },\r\n      legend: {\r\n        data: ['新增弹幕数', '新增用户'],\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: trendData.value.dates,\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n      },\r\n      series: [\r\n        {\r\n          name: '新增弹幕数',\r\n          type: 'line',\r\n          data: trendData.value.barrages,\r\n        },\r\n        {\r\n          name: '新增用户',\r\n          type: 'line',\r\n          data: trendData.value.newUsers,\r\n        },\r\n      ],\r\n    });\r\n  }\r\n};\r\n\r\n// 初始化柱状图\r\nconst initDonationChart = () => {\r\n  if (donationChartRef.value) {\r\n    const donationChart = echarts.init(donationChartRef.value);\r\n    donationChart.setOption({\r\n      tooltip: {\r\n        trigger: 'axis',\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: donationTrendData.value.dates,\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n      },\r\n      series: [\r\n        {\r\n          name: '捐赠金额',\r\n          type: 'bar',\r\n          data: donationTrendData.value.donations,\r\n        },\r\n      ],\r\n    });\r\n  }\r\n};\r\n\r\n// 下载图表\r\nconst downloadChart = (chartType) => {\r\n  let chartInstance;\r\n  if (chartType === 'trendChart') {\r\n    chartInstance = echarts.getInstanceByDom(trendChartRef.value);\r\n  } else if (chartType === 'donationChart') {\r\n    chartInstance = echarts.getInstanceByDom(donationChartRef.value);\r\n  }\r\n\r\n  if (chartInstance) {\r\n    const imgUrl = chartInstance.getDataURL({\r\n      type: 'png',\r\n      pixelRatio: 2,\r\n      backgroundColor: '#fff',\r\n    });\r\n    const link = document.createElement('a');\r\n    link.href = imgUrl;\r\n    link.download = `${chartType}.png`;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n};\r\n\r\n// 初始化数据\r\nconst initData = async () => {\r\n  try {\r\n    // 获取统计数据\r\n    stats.value = await fetchStats();\r\n\r\n    // 获取近七日趋势数据\r\n    const trendResponse = await fetchTrendData();\r\n    trendData.value = trendResponse;\r\n\r\n    // 获取近十日捐赠趋势数据\r\n    const donationTrendResponse = await fetchDonationTrendData();\r\n    donationTrendData.value = donationTrendResponse;\r\n\r\n    // 获取捐款排行榜数据\r\n    donationRanking.value = await fetchDonationRanking();\r\n\r\n    // 初始化图表\r\n    initTrendChart();\r\n    initDonationChart();\r\n  } catch (error) {\r\n    console.error('数据加载失败:', error);\r\n    if (error.response && error.response.status === 401) {\r\n      // 未授权，跳转到登录页\r\n      localStorage.removeItem('token'); // 清除本地存储的令牌\r\n      window.location.href = '/login'; // 跳转到登录页\r\n    }\r\n  }\r\n};\r\n\r\n// 组件挂载时初始化数据\r\nonMounted(() => {\r\n  initData();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard-container {\r\n  padding: 20px;\r\n}\r\n\r\n.stats-cards {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.stat-card {\r\n  text-align: left;\r\n}\r\n\r\n.stat-content {\r\n  margin-left: 95px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.stat-icon {\r\n  width: 70px; /* 图标宽度 */\r\n  height: 70px; /* 图标高度 */\r\n  margin-right: 16px; /* 图标与文字的间距 */\r\n}\r\n\r\n.stat-title {\r\n  font-size: 16px;\r\n  color: #666;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-top: 8px;\r\n}\r\n\r\n.charts-and-ranking {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chart-title {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.chart-container {\r\n  height: 300px;\r\n}\r\n</style>\r\n","import script from \"./HomePage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./HomePage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./HomePage.vue?vue&type=style&index=0&id=3caad062&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3caad062\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"user-container\">\r\n    <!-- 用户列表模块 -->\r\n    <div class=\"user-list\">\r\n      <!-- 查询表单 -->\r\n      <div class=\"query-form-container\">\r\n        <el-form :inline=\"true\" :model=\"queryForm\" class=\"query-form\">\r\n          <el-row :gutter=\"20\">\r\n            <!-- 左侧表单内容 -->\r\n            <el-col :span=\"18\">\r\n              <el-row :gutter=\"10\">\r\n                <!-- 账号（用户名） -->\r\n                <el-col :span=\"6\">\r\n                  <el-form-item label=\"账号\">\r\n                    <el-input\r\n                        v-model=\"queryForm.username\"\r\n                        placeholder=\"请输入账号\"\r\n                        clearable\r\n                    />\r\n                  </el-form-item>\r\n                </el-col>\r\n\r\n                <!-- 昵称 -->\r\n                <el-col :span=\"6\">\r\n                  <el-form-item label=\"昵称\">\r\n                    <el-input\r\n                        v-model=\"queryForm.nickname\"\r\n                        placeholder=\"请输入昵称\"\r\n                        clearable\r\n                    />\r\n                  </el-form-item>\r\n                </el-col>\r\n\r\n                <!-- 邮箱 -->\r\n                <el-col :span=\"6\">\r\n                  <el-form-item label=\"邮箱\">\r\n                    <el-input\r\n                        v-model=\"queryForm.email\"\r\n                        placeholder=\"请输入邮箱\"\r\n                        clearable\r\n                    />\r\n                  </el-form-item>\r\n                </el-col>\r\n\r\n                <!-- 电话 -->\r\n                <el-col :span=\"6\">\r\n                  <el-form-item label=\"电话\">\r\n                    <el-input\r\n                        v-model=\"queryForm.phone\"\r\n                        placeholder=\"请输入电话\"\r\n                        clearable\r\n                    />\r\n                  </el-form-item>\r\n                </el-col>\r\n              </el-row>\r\n            </el-col>\r\n\r\n            <!-- 右侧按钮 -->\r\n            <el-col :span=\"6\" class=\"button-group\">\r\n              <el-form-item>\r\n                <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\r\n                <el-button @click=\"handleReset\">重置</el-button>\r\n              </el-form-item>\r\n            </el-col>\r\n          </el-row>\r\n        </el-form>\r\n      </div>\r\n\r\n      <!-- 操作栏 -->\r\n      <div class=\"action-bar\">\r\n        <!-- 删除按钮 -->\r\n        <el-button\r\n            type=\"danger\"\r\n            :disabled=\"selectedUsers.length === 0\"\r\n            @click=\"handleBatchDelete\"\r\n        >\r\n          一键删除\r\n        </el-button>\r\n      </div>\r\n\r\n      <!-- 用户表格 -->\r\n      <el-table\r\n          :data=\"paginatedUsers\"\r\n          style=\"width: 100%\"\r\n          border\r\n          @selection-change=\"handleSelectionChange\"\r\n          :header-cell-style=\"{ background: 'var(--el-bg-color-page)', color: 'var(--el-text-color-primary)' }\"\r\n      >\r\n        <!-- 多选列 -->\r\n        <el-table-column type=\"selection\" width=\"55\" />\r\n\r\n        <!-- 用户名列 -->\r\n        <el-table-column prop=\"username\" label=\"账号\" width=\"150\" />\r\n\r\n        <!-- 昵称列 -->\r\n        <el-table-column prop=\"nickname\" label=\"昵称\" width=\"150\" />\r\n\r\n        <!-- 头像列 -->\r\n        <el-table-column label=\"头像\" width=\"150\">\r\n          <template #default=\"{ row }\">\r\n            <el-image\r\n                style=\"width: 50px; height: 50px; border-radius: 50%\"\r\n                :src=\"row.avatar\"\r\n                fit=\"cover\"\r\n                @click=\"handleAvatarClick(row.avatar)\"\r\n            />\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 邮箱列 -->\r\n        <el-table-column prop=\"email\" label=\"邮箱\" width=\"200\" />\r\n\r\n        <!-- 电话列 -->\r\n        <el-table-column prop=\"phone\" label=\"电话\" width=\"150\" />\r\n\r\n        <!-- 封禁状态列 -->\r\n        <el-table-column prop=\"isBanned\" label=\"封禁状态\" width=\"120\">\r\n          <template #default=\"{ row }\">\r\n            <el-tag :type=\"row.isBanned ? 'danger' : 'success'\">\r\n              {{ row.isBanned ? '已封禁' : '正常' }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 创建时间列 -->\r\n        <el-table-column prop=\"createdAt\" label=\"创建时间\" width=\"180\">\r\n          <template #default=\"{ row }\">\r\n            {{ formatDate(row.createdAt) }}\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 修改时间列 -->\r\n        <el-table-column prop=\"updatedAt\" label=\"修改时间\" width=\"180\">\r\n          <template #default=\"{ row }\">\r\n            {{ formatDate(row.updatedAt) }}\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 操作列（固定在右侧） -->\r\n        <el-table-column label=\"操作\" width=\"180\" fixed=\"right\">\r\n          <template #default=\"{ row }\">\r\n            <el-button\r\n                :type=\"row.isBanned ? 'success' : 'danger'\"\r\n                size=\"default\"\r\n                @click=\"handleBan(row)\"\r\n            >\r\n              {{ row.isBanned ? '解封' : '封禁' }}\r\n            </el-button>\r\n            <el-button type=\"warning\" size=\"default\" @click=\"handleEdit(row)\">编辑</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页组件 -->\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"userList.length\"\r\n            :page-size=\"pageSize\"\r\n            :current-page=\"currentPage\"\r\n            :page-sizes=\"[5, 10, 20, 50]\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handlePageChange\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 图片弹窗 -->\r\n    <el-dialog\r\n        v-model=\"avatarDialogVisible\"\r\n        title=\"查看头像\"\r\n        width=\"30%\"\r\n        center\r\n    >\r\n      <el-image\r\n          style=\"width: 100%; height: auto\"\r\n          :src=\"currentAvatar\"\r\n          fit=\"cover\"\r\n      />\r\n    </el-dialog>\r\n\r\n    <!-- 编辑抽屉 -->\r\n    <el-drawer\r\n        v-model=\"drawerVisible\"\r\n        title=\"编辑用户\"\r\n        direction=\"rtl\"\r\n        size=\"30%\"\r\n    >\r\n      <el-form :model=\"formData\" label-width=\"120px\">\r\n        <el-form-item label=\"头像\">\r\n          <el-image\r\n              style=\"width: 100px; height: 100px; border-radius: 50%\"\r\n              :src=\"formData.avatar\"\r\n              fit=\"cover\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"账号\">\r\n          <el-input v-model=\"formData.username\" placeholder=\"请输入账号\" disabled />\r\n        </el-form-item>\r\n        <el-form-item label=\"昵称\">\r\n          <el-input v-model=\"formData.nickname\" placeholder=\"请输入昵称\" disabled />\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\">\r\n          <el-input v-model=\"formData.email\" placeholder=\"请输入邮箱\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"电话\">\r\n          <el-input v-model=\"formData.phone\" placeholder=\"请输入电话\" />\r\n        </el-form-item>\r\n\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"drawerVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\">保存</el-button>\r\n      </template>\r\n    </el-drawer>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { ElMessage, ElMessageBox } from 'element-plus';\r\nimport axios from 'axios';\r\n\r\n// 用户列表数据\r\nconst userList = ref([]);\r\n\r\n// 查询表单数据\r\nconst queryForm = ref({\r\n  username: '', // 账号（用户名）\r\n  nickname: '', // 昵称\r\n  email: '', // 邮箱\r\n  phone: '', // 电话\r\n});\r\n\r\n// 分页相关状态\r\nconst currentPage = ref(1); // 当前页码\r\nconst pageSize = ref(5); // 每页显示条数\r\n\r\n// 选中的用户\r\nconst selectedUsers = ref([]);\r\n\r\n// 编辑抽屉相关状态\r\nconst drawerVisible = ref(false);\r\nconst formData = ref({\r\n  username: '',\r\n  nickname: '',\r\n  email: '',\r\n  phone: '',\r\n  avatar: '',\r\n});\r\n\r\n// 图片弹窗相关状态\r\nconst avatarDialogVisible = ref(false);\r\nconst currentAvatar = ref('');\r\n\r\n// 分页后的用户列表\r\nconst paginatedUsers = computed(() => {\r\n  const start = (currentPage.value - 1) * pageSize.value;\r\n  const end = start + pageSize.value;\r\n  return userList.value.slice(start, end);\r\n});\r\n\r\n// 时间格式化方法\r\nconst formatDate = (dateArray) => {\r\n  if (!dateArray || !Array.isArray(dateArray) || dateArray.length !== 6) return '-'; // 如果时间数据无效，返回占位符\r\n\r\n  // 将数组转换为 Date 对象\r\n  const [year, month, day, hours, minutes, seconds] = dateArray;\r\n  const date = new Date(year, month - 1, day, hours, minutes, seconds); // 注意：月份需要减 1\r\n\r\n  // 格式化日期\r\n  const formattedYear = date.getFullYear();\r\n  const formattedMonth = String(date.getMonth() + 1).padStart(2, '0'); // 月份补零\r\n  const formattedDay = String(date.getDate()).padStart(2, '0'); // 日期补零\r\n  const formattedHours = String(date.getHours()).padStart(2, '0'); // 小时补零\r\n  const formattedMinutes = String(date.getMinutes()).padStart(2, '0'); // 分钟补零\r\n  const formattedSeconds = String(date.getSeconds()).padStart(2, '0'); // 秒数补零\r\n\r\n  return `${formattedYear}-${formattedMonth}-${formattedDay} ${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\r\n};\r\n\r\n// 点击头像事件\r\nconst handleAvatarClick = (avatarUrl) => {\r\n  currentAvatar.value = avatarUrl;\r\n  avatarDialogVisible.value = true;\r\n};\r\n\r\n// 获取用户数据\r\nconst fetchUsers = async () => {\r\n  try {\r\n    const token = localStorage.getItem('token'); // 从 localStorage 获取令牌\r\n    if (!token) {\r\n      ElMessage.error('用户未登录，请先登录');\r\n      return;\r\n    }\r\n\r\n    const params = {\r\n      username: queryForm.value.username,\r\n      nickname: queryForm.value.nickname,\r\n      email: queryForm.value.email,\r\n      phone: queryForm.value.phone,\r\n    };\r\n\r\n    const response = await axios.get('/admin/users', {\r\n      params,\r\n      headers: {\r\n        Authorization: `Bearer ${token}`, // 添加令牌到请求头\r\n      },\r\n    });\r\n\r\n    if (response.data.code === 200) {\r\n      userList.value = response.data.data;\r\n    } else {\r\n      ElMessage.error('获取用户列表失败');\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error('获取用户列表失败：' + error.message);\r\n  }\r\n};\r\n\r\n// 封禁/解封用户\r\nconst handleBan = async (user) => {\r\n  try {\r\n    const token = localStorage.getItem('token'); // 从 localStorage 获取令牌\r\n    if (!token) {\r\n      ElMessage.error('用户未登录，请先登录');\r\n      return;\r\n    }\r\n\r\n    const action = user.isBanned ? '解封' : '封禁';\r\n    await ElMessageBox.confirm(`确定要${action}用户 ${user.username} 吗？`, '提示', {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    });\r\n\r\n    const response = await axios.post(`/admin/users/ban/${user.id}`, {\r\n      isBanned: !user.isBanned,\r\n    }, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`, // 添加令牌到请求头\r\n      },\r\n    });\r\n\r\n    if (response.data.code === 200) {\r\n      ElMessage.success(`${action}成功`);\r\n      await fetchUsers(); // 重新获取数据\r\n    } else {\r\n      ElMessage.error(`${action}失败`);\r\n    }\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      ElMessage.error(` ${error.message}`);\r\n    }\r\n  }\r\n};\r\n\r\n// 编辑用户\r\nconst handleEdit = (user) => {\r\n  formData.value = { ...user };\r\n  drawerVisible.value = true;\r\n};\r\n\r\n// 提交表单（编辑）\r\nconst handleSubmit = async () => {\r\n  try {\r\n    const token = localStorage.getItem('token'); // 从 localStorage 获取令牌\r\n    if (!token) {\r\n      ElMessage.error('用户未登录，请先登录');\r\n      return;\r\n    }\r\n\r\n    await axios.put(`/admin/users/${formData.value.id}`, formData.value, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`, // 添加令牌到请求头\r\n      },\r\n    });\r\n\r\n    ElMessage.success('编辑成功');\r\n    drawerVisible.value = false;\r\n    await fetchUsers(); // 重新获取数据\r\n  } catch (error) {\r\n    ElMessage.error('操作失败：' + error.message);\r\n  }\r\n};\r\n\r\n// 处理选中用户\r\nconst handleSelectionChange = (selection) => {\r\n  selectedUsers.value = selection;\r\n};\r\n\r\n// 批量删除用户\r\nconst handleBatchDelete = async () => {\r\n  try {\r\n    const token = localStorage.getItem('token'); // 从 localStorage 获取令牌\r\n    if (!token) {\r\n      ElMessage.error('用户未登录，请先登录');\r\n      return;\r\n    }\r\n\r\n    await ElMessageBox.confirm('确定要删除选中的用户吗？', '提示', {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    });\r\n\r\n    const selectedIds = selectedUsers.value.map(user => user.id);\r\n    await axios.post('/admin/users/batch-delete', selectedIds, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`, // 添加令牌到请求头\r\n      },\r\n    });\r\n\r\n    await fetchUsers();\r\n    ElMessage.success('删除成功');\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      ElMessage.error('删除失败: ' + error.message);\r\n    }\r\n  }\r\n};\r\n\r\n// 处理查询\r\nconst handleQuery = () => {\r\n  currentPage.value = 1;\r\n  fetchUsers();\r\n};\r\n\r\n// 处理重置\r\nconst handleReset = () => {\r\n  queryForm.value = {\r\n    username: '',\r\n    nickname: '',\r\n    email: '',\r\n    phone: '',\r\n  };\r\n  currentPage.value = 1;\r\n  fetchUsers();\r\n};\r\n\r\n// 处理每页条数变化\r\nconst handleSizeChange = (size) => {\r\n  pageSize.value = size;\r\n  currentPage.value = 1;\r\n};\r\n\r\n// 处理页码变化\r\nconst handlePageChange = (page) => {\r\n  currentPage.value = page;\r\n};\r\n\r\n// 组件挂载时初始化数据\r\nonMounted(() => {\r\n  fetchUsers();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* 外层容器样式 */\r\n.user-container {\r\n  border: 1px solid var(--el-border-color-light);\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n}\r\n\r\n/* 用户列表模块样式 */\r\n.user-list {\r\n  width: 100%;\r\n}\r\n\r\n/* 查询表单容器样式 */\r\n.query-form-container {\r\n  background-color: var(--el-bg-color-page);\r\n  padding: 20px;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* 按钮组样式 */\r\n.button-group {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n/* 操作栏样式 */\r\n.action-bar {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* 设置表格容器的宽度和溢出滚动 */\r\n.el-table {\r\n  width: 100%;\r\n  overflow-x: auto;\r\n}\r\n\r\n/* 分页样式 */\r\n.pagination {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n</style>\r\n","import script from \"./UserList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UserList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UserList.vue?vue&type=style&index=0&id=447c3f49&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-447c3f49\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"user-messages-container\">\r\n    <!-- 用户消息列表模块 -->\r\n    <div class=\"message-list\">\r\n      <!-- 查询表单 -->\r\n      <div class=\"query-form-container\">\r\n        <el-form :inline=\"true\" class=\"query-form\">\r\n          <el-row :gutter=\"20\">\r\n            <!-- 左侧表单内容 -->\r\n            <el-col :span=\"18\">\r\n              <el-row :gutter=\"10\">\r\n                <!-- 反馈人 -->\r\n                <el-col :span=\"8\">\r\n                  <el-form-item label=\"反馈人姓名\">\r\n                    <el-input\r\n                        v-model=\"queryForm.name\"\r\n                        placeholder=\"请输入反馈人姓名\"\r\n                        clearable\r\n                    />\r\n                  </el-form-item>\r\n                </el-col>\r\n\r\n                <!-- 时间范围 -->\r\n                <el-col :span=\"8\">\r\n                  <el-form-item label=\"时间范围\">\r\n                    <el-date-picker\r\n                        v-model=\"queryForm.dateRange\"\r\n                        type=\"daterange\"\r\n                        range-separator=\"至\"\r\n                        start-placeholder=\"开始日期\"\r\n                        end-placeholder=\"结束日期\"\r\n                        value-format=\"YYYY-MM-DD\"\r\n                    />\r\n                  </el-form-item>\r\n                </el-col>\r\n              </el-row>\r\n            </el-col>\r\n\r\n            <!-- 右侧按钮 -->\r\n            <el-col :span=\"6\" class=\"button-group\">\r\n              <el-form-item>\r\n                <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\r\n                <el-button @click=\"handleReset\">重置</el-button>\r\n              </el-form-item>\r\n            </el-col>\r\n          </el-row>\r\n        </el-form>\r\n      </div>\r\n\r\n      <!-- 操作栏 -->\r\n      <div class=\"action-bar\">\r\n        <!-- 删除按钮 -->\r\n        <el-button\r\n            type=\"danger\"\r\n            :disabled=\"selectedMessages.length === 0\"\r\n            @click=\"handleBatchDelete\"\r\n        >\r\n          批量删除\r\n        </el-button>\r\n      </div>\r\n\r\n      <!-- 消息表格 -->\r\n      <div class=\"table-container\">\r\n        <el-table\r\n            :data=\"paginatedMessages\"\r\n            style=\"width: 100%\"\r\n            border\r\n            @selection-change=\"handleSelectionChange\"\r\n            :header-cell-style=\"{ background: 'var(--el-bg-color-page)', color: 'var(--el-text-color-primary)' }\"\r\n        >\r\n          <!-- 多选列 -->\r\n          <el-table-column type=\"selection\" width=\"55\" />\r\n\r\n          <!-- 反馈人头像 -->\r\n          <el-table-column label=\"反馈人头像\" width=\"120\">\r\n            <template #default=\"{ row }\">\r\n              <el-avatar :src=\"row.avatar\" :size=\"40\" />\r\n            </template>\r\n          </el-table-column>\r\n\r\n          <!-- 反馈人昵称 -->\r\n          <el-table-column prop=\"nickname\" label=\"反馈人昵称\" width=\"150\" />\r\n\r\n          <!-- 反馈人真实姓名 -->\r\n          <el-table-column prop=\"realName\" label=\"反馈人真实姓名\" width=\"150\" />\r\n\r\n          <!-- 反馈人电话 -->\r\n          <el-table-column prop=\"phone\" label=\"反馈人电话\" width=\"150\" />\r\n\r\n          <!-- 发送时间 -->\r\n          <el-table-column prop=\"createTime\" label=\"发送时间\" width=\"180\" />\r\n\r\n          <!-- 项目封面 -->\r\n          <el-table-column label=\"项目封面\" width=\"250\">\r\n            <template #default=\"{ row }\">\r\n              <img\r\n                  :src=\"row.projectImage\"\r\n                  alt=\"项目封面\"\r\n                  style=\"width: 200px; height: 120px; object-fit: cover; border-radius: 4px;\"\r\n              />\r\n            </template>\r\n          </el-table-column>\r\n\r\n          <!-- 项目名称 -->\r\n          <el-table-column prop=\"projectTitle\" label=\"项目名称\" width=\"200\" />\r\n\r\n          <!-- 反馈内容 -->\r\n          <el-table-column label=\"反馈内容\" fixed=\"right\" width=\"150\">\r\n            <template #default=\"{ row }\">\r\n              <el-button type=\"primary\" size=\"default\" @click=\"handleViewMessage(row)\">查看详情</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n\r\n      <!-- 分页组件 -->\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"messageList.length\"\r\n            :page-size=\"pageSize\"\r\n            :current-page=\"currentPage\"\r\n            :page-sizes=\"[5, 10, 20, 50]\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handlePageChange\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 消息详情弹窗 -->\r\n    <el-dialog\r\n        v-model=\"messageDialogVisible\"\r\n        title=\"消息详情\"\r\n        width=\"30%\"\r\n        center\r\n        style=\"text-align: justify;\"\r\n    >\r\n      <div>\r\n        <!-- 反馈内容 -->\r\n        <div class=\"info-section\">\r\n          <p style=\"padding: 10px;border-radius: 4px;\">\r\n            {{ currentMessage.message }}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { ElMessage, ElMessageBox } from 'element-plus';\r\nimport axios from 'axios';\r\n\r\n// 消息列表数据\r\nconst messageList = ref([]);\r\n\r\n// 查询表单数据\r\nconst queryForm = ref({\r\n  name: '', // 反馈人\r\n  dateRange: [], // 时间范围\r\n});\r\n\r\n// 分页相关状态\r\nconst currentPage = ref(1); // 当前页码\r\nconst pageSize = ref(5); // 每页显示条数\r\n\r\n// 选中的消息\r\nconst selectedMessages = ref([]);\r\n\r\n// 消息详情弹窗相关状态\r\nconst messageDialogVisible = ref(false);\r\nconst currentMessage = ref(null);\r\n\r\n// 分页后的消息列表\r\nconst paginatedMessages = computed(() => {\r\n  const start = (currentPage.value - 1) * pageSize.value;\r\n  const end = start + pageSize.value;\r\n  return messageList.value.slice(start, end);\r\n});\r\n\r\nconst fetchMessageList = async () => {\r\n  try {\r\n    const params = {\r\n      name: queryForm.value.name,\r\n      startDate: queryForm.value.dateRange?.[0] ? `${queryForm.value.dateRange[0]} 00:00:00` : null,\r\n      endDate: queryForm.value.dateRange?.[1] ? `${queryForm.value.dateRange[1]} 23:59:59` : null,\r\n    };\r\n\r\n    const token = localStorage.getItem('token');\r\n    const response = await axios.get('/admin/feedback', {\r\n      params,\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n    console.log('接口返回数据:', response.data); // 打印返回值\r\n    if (response.data.code === 200) { // 判断状态码\r\n      // 对返回的数据进行日期格式化\r\n      messageList.value = response.data.data.map(item => {\r\n        return {\r\n          ...item, // 保留其他字段\r\n          createTime: formatDateTimeFromArray(item.createTime), // 格式化 createTime 字段\r\n          projectTitle: item.projectTitle || '无项目名称', // 默认值\r\n          projectImage: item.projectImage || '默认封面URL', // 默认值\r\n        };\r\n      });\r\n    } else {\r\n      ElMessage.error(response.msg || '获取消息列表失败'); // 显示错误信息\r\n    }\r\n  } catch (error) {\r\n    console.error('获取消息列表失败:', error);\r\n    ElMessage.error('获取消息列表失败');\r\n  }\r\n};\r\n\r\nfunction formatDateTimeFromArray(dateArray) {\r\n  if (!dateArray || dateArray.length < 6) return ''; // 如果数据不合法，返回空字符串\r\n\r\n  const [year, month, day, hour, minute, second] = dateArray;\r\n  const date = new Date(year, month - 1, day, hour, minute, second);\r\n\r\n  const pad = (num) => num.toString().padStart(2, '0'); // 补零函数\r\n  const formattedDate = `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())}`;\r\n  const formattedTime = `${pad(date.getHours())}:${pad(date.getMinutes())}:${pad(date.getSeconds())}`;\r\n\r\n  return `${formattedDate} ${formattedTime}`;\r\n}\r\n\r\n// 处理选中消息\r\nconst handleSelectionChange = (selection) => {\r\n  selectedMessages.value = selection;\r\n};\r\n\r\n// 批量删除\r\nconst handleBatchDelete = async () => {\r\n  try {\r\n    // 确认删除操作\r\n    await ElMessageBox.confirm('确定要删除选中的消息吗？', '提示', {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    });\r\n\r\n    // 获取选中的消息 ID 列表\r\n    const selectedIds = selectedMessages.value.map(message => message.id);\r\n\r\n    // 发送批量删除请求\r\n    const token = localStorage.getItem('token');\r\n    const response = await axios.post('/admin/feedback/batch-delete', selectedIds, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n    console.log('批量删除接口返回数据:', response.data); // 打印返回值\r\n    if (response.code === 200) { // 判断状态码\r\n      ElMessage.success(response.msg || '删除成功'); // 显示成功信息\r\n      await fetchMessageList(); // 重新获取消息列表\r\n    } else {\r\n      ElMessage.error(response.msg || '删除失败'); // 显示错误信息\r\n    }\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      console.error('删除失败:', error);\r\n      ElMessage.error('删除失败: ' + error.msg);\r\n    }\r\n  }\r\n};\r\n\r\n// 查看消息详情\r\nconst handleViewMessage = (message) => {\r\n  currentMessage.value = message;\r\n  messageDialogVisible.value = true;\r\n};\r\n\r\n// 处理查询\r\nconst handleQuery = () => {\r\n  currentPage.value = 1;\r\n  fetchMessageList(); // 根据查询条件获取数据\r\n};\r\n\r\n// 处理重置\r\nconst handleReset = () => {\r\n  queryForm.value = {\r\n    name: '',\r\n    dateRange: [],\r\n  };\r\n  currentPage.value = 1;\r\n  fetchMessageList(); // 重置后获取全部数据\r\n};\r\n\r\n// 处理每页条数变化\r\nconst handleSizeChange = (size) => {\r\n  pageSize.value = size;\r\n  currentPage.value = 1;\r\n};\r\n\r\n// 处理页码变化\r\nconst handlePageChange = (page) => {\r\n  currentPage.value = page;\r\n};\r\n\r\n// 组件挂载时初始化数据\r\nonMounted(() => {\r\n  console.log('组件已挂载，开始获取数据'); // 调试用\r\n  fetchMessageList(); // 页面加载时获取全部数据\r\n});\r\n</script>\r\n\r\n\r\n<style scoped>\r\n/* 外层容器样式 */\r\n.user-messages-container {\r\n  border: 1px solid var(--el-border-color-light);\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n}\r\n\r\n/* 消息列表模块样式 */\r\n.message-list {\r\n  width: 100%;\r\n}\r\n\r\n/* 查询表单容器样式 */\r\n.query-form-container {\r\n  background-color: var(--el-bg-color-page);\r\n  padding: 20px;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* 按钮组样式 */\r\n.button-group {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n/* 操作栏样式 */\r\n.action-bar {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* 设置表格容器的宽度和溢出滚动 */\r\n.el-table {\r\n  width: 100%;\r\n  overflow-x: auto;\r\n}\r\n\r\n/* 分页样式 */\r\n.pagination {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n/* 信息部分样式 */\r\n.info-section {\r\n  margin-top: 20px;\r\n}\r\n\r\n.info-section h2 {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n  color: var(--el-text-color-primary);\r\n}\r\n\r\n.info-list {\r\n  list-style: none;\r\n  padding-left: 20px;\r\n  margin: 0;\r\n}\r\n\r\n.info-list li {\r\n  margin-bottom: 8px;\r\n  color: var(--el-text-color-regular);\r\n}\r\n\r\n.info-list strong {\r\n  font-weight: bold;\r\n  margin-right: 8px;\r\n}\r\n\r\n/* 表格容器样式 */\r\n.table-container {\r\n  width: 100%;\r\n  overflow-x: auto; /* 横向滚动 */\r\n}\r\n\r\n/* 分页样式 */\r\n.pagination {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n/* 弹窗内容样式 */\r\n.info-section p {\r\n  font-size: 20px;\r\n  max-height: 300px; /* 固定高度 */\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n}\r\n</style>\r\n","import script from \"./UserMessages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UserMessages.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UserMessages.vue?vue&type=style&index=0&id=1eaf9ea1&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1eaf9ea1\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"news-container\">\r\n    <!-- 新闻列表模块 -->\r\n    <div class=\"news-list\">\r\n      <!-- 查询表单 -->\r\n      <div class=\"query-form-container\">\r\n        <el-form :inline=\"true\" :model=\"queryForm\" class=\"query-form\">\r\n          <el-row :gutter=\"20\">\r\n            <!-- 左侧表单内容 -->\r\n            <el-col :span=\"18\">\r\n              <el-row :gutter=\"10\">\r\n                <!-- 新闻标题 -->\r\n                <el-col :span=\"8\">\r\n                  <el-form-item label=\"新闻标题\">\r\n                    <el-input\r\n                        v-model=\"queryForm.title\"\r\n                        placeholder=\"请输入新闻标题\"\r\n                        clearable\r\n                    />\r\n                  </el-form-item>\r\n                </el-col>\r\n\r\n                <!-- 发布者 -->\r\n                <el-col :span=\"8\">\r\n                  <el-form-item label=\"发布者\">\r\n                    <el-input\r\n                        v-model=\"queryForm.publisher\"\r\n                        placeholder=\"请输入发布者\"\r\n                        clearable\r\n                    />\r\n                  </el-form-item>\r\n                </el-col>\r\n\r\n                <!-- 时间范围 -->\r\n                <el-col :span=\"8\">\r\n                  <el-form-item label=\"发布日期\">\r\n                    <el-date-picker\r\n                        v-model=\"queryForm.dateRange\"\r\n                        type=\"daterange\"\r\n                        range-separator=\"至\"\r\n                        start-placeholder=\"开始日期\"\r\n                        end-placeholder=\"结束日期\"\r\n                        value-format=\"YYYY-MM-DD\"\r\n                    />\r\n                  </el-form-item>\r\n                </el-col>\r\n              </el-row>\r\n            </el-col>\r\n\r\n            <!-- 右侧按钮 -->\r\n            <el-col :span=\"6\" class=\"button-group\">\r\n              <el-form-item>\r\n                <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\r\n                <el-button @click=\"handleReset\">重置</el-button>\r\n              </el-form-item>\r\n            </el-col>\r\n          </el-row>\r\n        </el-form>\r\n      </div>\r\n\r\n      <!-- 操作栏 -->\r\n      <div class=\"action-bar\">\r\n        <!-- 添加按钮 -->\r\n        <el-button type=\"primary\" @click=\"handleAdd\">添加</el-button>\r\n        <!-- 删除按钮 -->\r\n        <el-button\r\n            type=\"danger\"\r\n            :disabled=\"selectedNews.length === 0\"\r\n            @click=\"handleBatchDelete\"\r\n        >\r\n          一键删除\r\n        </el-button>\r\n      </div>\r\n\r\n      <!-- 新闻表格 -->\r\n      <el-table\r\n          :data=\"paginatedNews\"\r\n          style=\"width: 100%\"\r\n          border\r\n          @selection-change=\"handleSelectionChange\"\r\n          :header-cell-style=\"{ background: 'var(--el-bg-color-page)', color: 'var(--el-text-color-primary)' }\"\r\n      >\r\n        <!-- 多选列 -->\r\n        <el-table-column type=\"selection\" width=\"55\" />\r\n\r\n        <!-- 新闻标题列 -->\r\n        <el-table-column prop=\"title\" label=\"新闻标题\" width=\"300\" />\r\n\r\n\r\n\r\n        <!-- 封面图片列 -->\r\n        <el-table-column label=\"封面\" width=\"250\">\r\n          <template #default=\"{ row }\">\r\n            <el-image\r\n                style=\"width: 200px; height: 120px; border-radius: 4px\"\r\n                :src=\"row.coverUrl\"\r\n                fit=\"cover\"\r\n            />\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column label=\"是否推荐\" width=\"120\">\r\n          <template #default=\"{ row }\">\r\n            <el-switch\r\n                inline-prompt\r\n                active-text=\"是\"\r\n                inactive-text=\"否\"\r\n                v-model=\"row.isRecommended\"\r\n                :active-value=\"1\"\r\n                :inactive-value=\"0\"\r\n                :disabled=\"\r\n        row.isRecommended === 0 &&\r\n        newsList.filter((news) => news.isRecommended === 1).length > 8\r\n      \"\r\n                @change=\"handleRecommendChange(row)\"\r\n            />\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 发布日期列 -->\r\n        <el-table-column prop=\"date\" label=\"发布日期\" width=\"150\">\r\n          <template #default=\"{ row }\">\r\n            {{ formatDate(row.date) }}\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 类型列 -->\r\n        <el-table-column prop=\"type\" label=\"类型\" width=\"150\">\r\n          <template #default=\"{ row }\">\r\n            <el-tag :type=\"getTypeTag(row.type)\">\r\n              {{ getTypeLabel(row.type) }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 发布者列 -->\r\n        <el-table-column prop=\"publisher\" label=\"发布者\" width=\"150\" />\r\n\r\n\r\n\r\n        <!-- 操作列（固定在右侧） -->\r\n        <el-table-column label=\"操作\" width=\"180\" fixed=\"right\">\r\n          <template #default=\"{ row }\">\r\n            <el-button type=\"primary\" size=\"default\" @click=\"handleView(row)\">预览</el-button>\r\n            <el-button type=\"warning\" size=\"default\" @click=\"handleEdit(row)\">编辑</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页组件 -->\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"newsList.length\"\r\n            :page-size=\"pageSize\"\r\n            :current-page=\"currentPage\"\r\n            :page-sizes=\"[5, 10, 20, 50]\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handlePageChange\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 预览弹窗 -->\r\n    <el-dialog\r\n        v-if=\"currentNews\"\r\n        v-model=\"viewDialogVisible\"\r\n        title=\"新闻详情\"\r\n        width=\"50%\"\r\n        center\r\n    >\r\n      <div>\r\n        <!-- 标题居中 -->\r\n        <h2 style=\"text-align: center; margin-bottom: 20px;\">{{ currentNews.title }}</h2>\r\n\r\n        <!-- 发布日期和发布者平行显示 -->\r\n        <el-row :gutter=\"20\" style=\"margin-bottom: 20px;\">\r\n          <el-col :span=\"12\">\r\n            <div class=\"info-item\" style=\"margin-left: 210px;\">\r\n              <span class=\"label\">发布日期：</span>\r\n              <span class=\"value\">{{ formatDate(currentNews.date) }}</span>\r\n            </div>\r\n          </el-col>\r\n          <el-col :span=\"12\">\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">发布者：</span>\r\n              <span class=\"value\">{{ currentNews.publisher }}</span>\r\n            </div>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <!-- 新闻内容 -->\r\n        <div class=\"info-section\">\r\n          <div v-html=\"currentNews.content\"></div>\r\n        </div>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- 编辑/添加抽屉 -->\r\n    <el-drawer\r\n        v-model=\"drawerVisible\"\r\n        :title=\"isEdit ? '编辑新闻' : '添加新闻'\"\r\n        direction=\"rtl\"\r\n        size=\"40%\"\r\n    >\r\n      <el-form :model=\"formData\" label-width=\"120px\">\r\n        <el-form-item label=\"新闻标题\">\r\n          <el-input v-model=\"formData.title\" placeholder=\"请输入新闻标题\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"发布日期\">\r\n          <el-date-picker\r\n              v-model=\"formData.date\"\r\n              type=\"date\"\r\n              placeholder=\"选择发布日期\"\r\n              value-format=\"YYYY-MM-DD\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"发布者\">\r\n          <el-input v-model=\"formData.publisher\" placeholder=\"请输入发布者\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"封面图片\">\r\n          <div class=\"image-upload\">\r\n            <!-- 图片预览 -->\r\n            <el-image\r\n                v-if=\"formData.coverUrl\"\r\n                style=\"width: 150px; height: 100px; border-radius: 4px; cursor: pointer\"\r\n                :src=\"formData.coverUrl\"\r\n                fit=\"cover\"\r\n                @click=\"triggerFileInput\"\r\n            />\r\n            <!-- 默认占位图 -->\r\n            <div\r\n                v-else\r\n                class=\"image-placeholder\"\r\n                @click=\"triggerFileInput\"\r\n            >\r\n              <span>点击上传封面</span>\r\n            </div>\r\n            <!-- 文件选择按钮 -->\r\n            <input\r\n                type=\"file\"\r\n                ref=\"fileInput\"\r\n                style=\"display: none\"\r\n                @change=\"handleFileChange\"\r\n                accept=\"image/*\"\r\n            />\r\n          </div>\r\n        </el-form-item>\r\n        <el-form-item label=\"类型\">\r\n          <el-select v-model=\"formData.type\" placeholder=\"请选择类型\">\r\n            <el-option label=\"通知公告\" :value=\"1\" />\r\n            <el-option label=\"媒体报道\" :value=\"2\" />\r\n            <el-option label=\"慈善人物\" :value=\"3\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"新闻内容\">\r\n          <quill-editor\r\n              v-model:content=\"formData.content\"\r\n              contentType=\"html\"\r\n              theme=\"snow\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"drawerVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\">{{ isEdit ? '保存' : '添加' }}</el-button>\r\n      </template>\r\n    </el-drawer>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { ElMessage, ElMessageBox } from 'element-plus';\r\nimport axios from 'axios';\r\nimport { QuillEditor } from '@vueup/vue-quill';\r\nimport '@vueup/vue-quill/dist/vue-quill.snow.css';\r\n\r\n// 新闻列表数据\r\nconst newsList = ref([]);\r\n\r\n// 查询表单数据\r\nconst queryForm = ref({\r\n  title: '', // 新闻标题\r\n  publisher: '', // 发布者\r\n  dateRange: [], // 发布日期范围\r\n});\r\n\r\n// 分页相关状态\r\nconst currentPage = ref(1); // 当前页码\r\nconst pageSize = ref(5); // 每页显示条数\r\n\r\n// 选中的新闻\r\nconst selectedNews = ref([]);\r\n\r\n// 预览弹窗相关状态\r\nconst viewDialogVisible = ref(false);\r\nconst currentNews = ref(null);\r\n\r\n// 编辑/添加抽屉相关状态\r\nconst drawerVisible = ref(false);\r\nconst isEdit = ref(false); // 是否为编辑模式\r\nconst formData = ref({\r\n  title: '',\r\n  date: '',\r\n  publisher: '',\r\n  coverUrl: '',\r\n  type: 1, // 1-通知公告，2-媒体报道，3-慈善人物\r\n  content: '',\r\n});\r\n\r\n// 分页后的新闻列表\r\nconst paginatedNews = computed(() => {\r\n  const start = (currentPage.value - 1) * pageSize.value;\r\n  const end = start + pageSize.value;\r\n  return newsList.value.slice(start, end);\r\n});\r\n\r\n// 获取新闻数据\r\nconst fetchNews = async () => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    try {\r\n      const params = {\r\n        title: queryForm.value.title,\r\n        publisher: queryForm.value.publisher,\r\n        startDate: queryForm.value.dateRange?.[0],\r\n        endDate: queryForm.value.dateRange?.[1],\r\n      };\r\n\r\n      const response = await axios.get('/admin/news', {\r\n        params,\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.data.code === 200) {\r\n        newsList.value = response.data.data.map((news) => ({\r\n          ...news,\r\n          isRecommended: news.isRecommended || 0, // 确保 isRecommended 字段存在\r\n        }));\r\n      } else {\r\n        console.error('获取新闻列表失败:', response.data.msg);\r\n        ElMessage.error('获取新闻列表失败');\r\n      }\r\n    } catch (error) {\r\n      console.error('获取新闻列表失败:', error);\r\n      ElMessage.error('获取新闻列表失败：' + error.message);\r\n    }\r\n  } else {\r\n    ElMessage.error('用户未登录，请先登录');\r\n  }\r\n};\r\n\r\n\r\nconst handleRecommendChange = async (row) => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      ElMessage.error('用户未登录，请先登录');\r\n      return;\r\n    }\r\n\r\n    // 检查当前推荐的新闻数量\r\n    const recommendedCount = newsList.value.filter(\r\n        (news) => news.isRecommended === 1\r\n    ).length;\r\n\r\n    // 如果当前新闻已经是推荐状态，且推荐数量已经达到八个，阻止操作\r\n    if (row.isRecommended === 1 && recommendedCount > 8) {\r\n      ElMessage.warning('推荐数量已达到上限（8个），无法继续推荐');\r\n      row.isRecommended = 0; // 恢复为未推荐状态\r\n      return;\r\n    }\r\n\r\n    // 调用接口更新推荐状态\r\n    const response = await axios.put(\r\n        `/admin/news/${row.id}/recommend`,\r\n        { isRecommended: row.isRecommended }, // 传递推荐状态\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n    );\r\n\r\n    if (response.data.code === 200) {\r\n      ElMessage.success('推荐状态更新成功');\r\n    } else {\r\n      ElMessage.error('推荐状态更新失败');\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error('推荐状态更新失败：' + error.message);\r\n  }\r\n};\r\n\r\n// 时间格式化函数\r\nconst formatDate = (timestamp) => {\r\n  if (!timestamp) return ''; // 如果时间戳为空，返回空字符串\r\n  const date = new Date(timestamp); // 将时间戳转换为 Date 对象\r\n  const year = date.getFullYear(); // 获取年份\r\n  const month = String(date.getMonth() + 1).padStart(2, '0'); // 获取月份，补零\r\n  const day = String(date.getDate()).padStart(2, '0'); // 获取日期，补零\r\n  return `${year}-${month}-${day}`; // 返回格式化后的日期字符串\r\n};\r\n\r\n// 预览新闻详情\r\nconst handleView = (news) => {\r\n  currentNews.value = news;\r\n  viewDialogVisible.value = true;\r\n};\r\n\r\n// 编辑新闻\r\nconst handleEdit = (news) => {\r\n  isEdit.value = true;\r\n  formData.value = { ...news };\r\n  drawerVisible.value = true;\r\n};\r\n\r\n// 添加新闻\r\nconst handleAdd = () => {\r\n  isEdit.value = false;\r\n  formData.value = {\r\n    title: '',\r\n    date: '',\r\n    publisher: '',\r\n    coverUrl: '',\r\n    type: 1,\r\n    content: '',\r\n  };\r\n  drawerVisible.value = true;\r\n};\r\n\r\n// 提交表单（添加或编辑）\r\nconst handleSubmit = async () => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      ElMessage.error('用户未登录，请先登录');\r\n      return;\r\n    }\r\n\r\n    if (isEdit.value) {\r\n      // 编辑逻辑\r\n      const response = await axios.put(`/admin/news/${formData.value.id}`, formData.value, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.data.code === 200) {\r\n        await fetchNews(); // 重新获取数据\r\n        ElMessage.success('编辑成功');\r\n      }\r\n    } else {\r\n      // 添加逻辑\r\n      const response = await axios.post('/admin/news', formData.value, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.data.code === 200) {\r\n        await fetchNews(); // 重新获取数据\r\n        ElMessage.success('添加成功');\r\n      }\r\n    }\r\n\r\n    // 清空表单数据\r\n    formData.value = {\r\n      title: '',\r\n      date: '',\r\n      publisher: '',\r\n      coverUrl: '',\r\n      type: 1,\r\n      content: '',\r\n    };\r\n\r\n    drawerVisible.value = false; // 关闭抽屉\r\n  } catch (error) {\r\n    ElMessage.error('操作失败：' + error.message);\r\n  }\r\n};\r\n\r\n// 处理选中新闻\r\nconst handleSelectionChange = (selection) => {\r\n  selectedNews.value = selection;\r\n};\r\n\r\n// 批量删除新闻\r\nconst handleBatchDelete = async () => {\r\n  try {\r\n    // 确认删除操作\r\n    await ElMessageBox.confirm('确定要删除选中的新闻吗？', '提示', {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    });\r\n\r\n    // 获取选中的新闻 ID 列表\r\n    const selectedIds = selectedNews.value.map(news => news.id);\r\n\r\n    // 从 localStorage 中获取令牌\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      ElMessage.error('用户未登录，请先登录');\r\n      return;\r\n    }\r\n\r\n    // 发送批量删除请求，直接传递数组\r\n    await axios.post('/admin/news/batch-delete', selectedIds, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`, // 添加令牌到请求头\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    // 重新获取新闻列表\r\n    await fetchNews();\r\n    ElMessage.success('删除成功');\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      ElMessage.error('删除失败: ' + error.message);\r\n    }\r\n  }\r\n};\r\n\r\n// 处理查询\r\nconst handleQuery = () => {\r\n  currentPage.value = 1;\r\n  fetchNews(); // 根据查询条件获取数据\r\n};\r\n\r\n// 处理重置\r\nconst handleReset = () => {\r\n  queryForm.value = {\r\n    title: '',\r\n    publisher: '',\r\n    dateRange: [],\r\n  };\r\n  currentPage.value = 1;\r\n  fetchNews(); // 重置后获取全部数据\r\n};\r\n\r\n// 处理每页条数变化\r\nconst handleSizeChange = (size) => {\r\n  pageSize.value = size;\r\n  currentPage.value = 1;\r\n};\r\n\r\n// 处理页码变化\r\nconst handlePageChange = (page) => {\r\n  currentPage.value = page;\r\n};\r\n\r\n// 文件输入框的引用\r\nconst fileInput = ref(null);\r\n\r\n// 触发文件选择\r\nconst triggerFileInput = () => {\r\n  fileInput.value.click(); // 模拟点击文件输入框\r\n};\r\n\r\n// 文件选择后的处理\r\nconst handleFileChange = async (event) => {\r\n  const file = event.target.files[0]; // 获取选择的文件\r\n  if (!file) return;\r\n\r\n  // 校验文件类型\r\n  if (!file.type.startsWith('image/')) {\r\n    ElMessage.error('只能上传图片文件！');\r\n    return;\r\n  }\r\n\r\n  // 校验文件大小（限制为 10MB）\r\n  const maxSize = 10 * 1024 * 1024; // 10MB\r\n  if (file.size > maxSize) {\r\n    ElMessage.error('文件大小不能超过 10MB');\r\n    return;\r\n  }\r\n\r\n  // 上传文件\r\n  try {\r\n    const uploadFormData = new FormData(); // 使用 uploadFormData 避免冲突\r\n    uploadFormData.append('file', file); // 将文件添加到 FormData\r\n\r\n    // 发送上传请求\r\n    const response = await axios.post('/files/upload', uploadFormData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data', // 设置请求头\r\n      },\r\n    });\r\n\r\n    // 处理上传成功\r\n    if (response.data.code === 200) {\r\n      formData.value.coverUrl = response.data.data; // 更新封面图片 URL\r\n      ElMessage.success('上传成功');\r\n    } else {\r\n      ElMessage.error(response.data.message || '上传失败');\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error('上传失败：' + error.message);\r\n  }\r\n};\r\n\r\n// 获取类型标签样式\r\nconst getTypeTag = (type) => {\r\n  switch (type) {\r\n    case 1:\r\n      return 'primary'; // 通知公告\r\n    case 2:\r\n      return 'success'; // 媒体报道\r\n    case 3:\r\n      return 'warning'; // 慈善人物\r\n    default:\r\n      return 'info';\r\n  }\r\n};\r\n\r\n// 获取类型标签文本\r\nconst getTypeLabel = (type) => {\r\n  switch (type) {\r\n    case 1:\r\n      return '通知公告';\r\n    case 2:\r\n      return '媒体报道';\r\n    case 3:\r\n      return '慈善人物';\r\n    default:\r\n      return '未知类型';\r\n  }\r\n};\r\n\r\n// 组件挂载时初始化数据\r\nonMounted(() => {\r\n  fetchNews(); // 页面加载时获取全部数据\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* 外层容器样式 */\r\n.news-container {\r\n  border: 1px solid var(--el-border-color-light);\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n}\r\n\r\n/* 新闻列表模块样式 */\r\n.news-list {\r\n  width: 100%;\r\n}\r\n\r\n/* 查询表单容器样式 */\r\n.query-form-container {\r\n  background-color: var(--el-bg-color-page);\r\n  padding: 20px;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* 按钮组样式 */\r\n.button-group {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n/* 操作栏样式 */\r\n.action-bar {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* 设置表格容器的宽度和溢出滚动 */\r\n.el-table {\r\n  width: 100%;\r\n  overflow-x: auto;\r\n}\r\n\r\n/* 分页样式 */\r\n.pagination {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n/* 图片上传区域样式 */\r\n.image-upload {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16px;\r\n}\r\n\r\n.image-placeholder {\r\n  width: 150px;\r\n  height: 100px;\r\n  border: 1px dashed #ccc;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  color: #999;\r\n}\r\n\r\n.image-placeholder:hover {\r\n  border-color: #409eff;\r\n  color: #409eff;\r\n}\r\n\r\n/* 新闻信息样式 */\r\n.news-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1em; /* 10px / 16px = 0.625em */\r\n}\r\n\r\n.info-item {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.info-item .label {\r\n  font-weight: bold;\r\n}\r\n\r\n.info-item .value {\r\n  color: var(--el-text-color-regular);\r\n}\r\n\r\n/* 信息部分样式 */\r\n.info-section {\r\n  margin-top: 20px;\r\n}\r\n\r\n.info-section h3 {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n  color: var(--el-text-color-primary);\r\n}\r\n\r\n/* 弹窗标题居中 */\r\n:deep(.el-dialog__header ){\r\n  text-align: left;\r\n}\r\n\r\n:deep(.el-dialog--center img){\r\n  width: 100%;\r\n}\r\n</style>\r\n","import script from \"./NewsList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./NewsList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./NewsList.vue?vue&type=style&index=0&id=3b37c9ae&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3b37c9ae\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"project-container\">\r\n    <!-- 项目列表模块 -->\r\n    <div class=\"project-list\">\r\n      <!-- 查询表单 -->\r\n      <div class=\"query-form-container\">\r\n        <el-form :inline=\"true\" :model=\"queryForm\" class=\"query-form\">\r\n          <el-row :gutter=\"20\">\r\n            <!-- 左侧表单内容 -->\r\n            <el-col :span=\"18\">\r\n              <el-row :gutter=\"10\">\r\n                <!-- 项目名称 -->\r\n                <el-col :span=\"8\">\r\n                  <el-form-item label=\"项目名称\">\r\n                    <el-input\r\n                        v-model=\"queryForm.title\"\r\n                        placeholder=\"请输入项目名称\"\r\n                        clearable\r\n                    />\r\n                  </el-form-item>\r\n                </el-col>\r\n\r\n                <!-- 项目编号 -->\r\n                <el-col :span=\"16\">\r\n                  <el-form-item label=\"项目编号\">\r\n                    <el-input\r\n                        v-model=\"queryForm.recordNumber\"\r\n                        placeholder=\"请输入项目编号\"\r\n                        clearable\r\n                    />\r\n                  </el-form-item>\r\n                </el-col>\r\n\r\n                <!-- 项目分类 -->\r\n                <el-col :span=\"8\">\r\n                  <el-form-item label=\"项目分类\">\r\n                    <el-select\r\n                        v-model=\"queryForm.category\"\r\n                        placeholder=\"请选择项目分类\"\r\n                        clearable\r\n                        style=\"width: 150px;\"\r\n                    >\r\n                      <el-option label=\"扶贫济困\" :value=\"0\" />\r\n                      <el-option label=\"健康医疗\" :value=\"1\" />\r\n                      <el-option label=\"助老扶幼\" :value=\"2\" />\r\n                      <el-option label=\"文化教育\" :value=\"3\" />\r\n                      <el-option label=\"社会服务\" :value=\"4\" />\r\n                      <el-option label=\"科技环保\" :value=\"5\" />\r\n                      <el-option label=\"灾难救助\" :value=\"6\" />\r\n                      <el-option label=\"专项基金\" :value=\"7\" />\r\n                    </el-select>\r\n                  </el-form-item>\r\n                </el-col>\r\n\r\n                <!-- 时间范围 -->\r\n                <el-col :span=\"8\">\r\n                  <el-form-item label=\"时间范围\">\r\n                    <el-date-picker\r\n                        v-model=\"queryForm.dateRange\"\r\n                        type=\"daterange\"\r\n                        range-separator=\"至\"\r\n                        start-placeholder=\"开始日期\"\r\n                        end-placeholder=\"结束日期\"\r\n                        value-format=\"YYYY-MM-DD\"\r\n                    />\r\n                  </el-form-item>\r\n                </el-col>\r\n              </el-row>\r\n            </el-col>\r\n\r\n            <!-- 右侧按钮 -->\r\n            <el-col :span=\"6\" class=\"button-group\">\r\n              <el-form-item style=\"margin-top: 45px;\">\r\n                <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\r\n                <el-button @click=\"handleReset\">重置</el-button>\r\n              </el-form-item>\r\n            </el-col>\r\n          </el-row>\r\n        </el-form>\r\n      </div>\r\n\r\n      <!-- 操作栏 -->\r\n      <div class=\"action-bar\">\r\n        <!-- 添加按钮 -->\r\n        <el-button type=\"primary\" @click=\"handleAdd\">添加</el-button>\r\n        <!-- 删除按钮 -->\r\n        <el-button\r\n            type=\"danger\"\r\n            :disabled=\"selectedProjects.length === 0\"\r\n            @click=\"handleBatchDelete\"\r\n        >\r\n          一键删除\r\n        </el-button>\r\n      </div>\r\n\r\n      <!-- 项目表格 -->\r\n      <el-table\r\n          :data=\"paginatedProjects\"\r\n          style=\"width: 100%\"\r\n          border\r\n          @selection-change=\"handleSelectionChange\"\r\n          :header-cell-style=\"{ background: 'var(--el-bg-color-page)', color: 'var(--el-text-color-primary)' }\"\r\n      >\r\n        <!-- 多选列 -->\r\n        <el-table-column type=\"selection\" width=\"55\" />\r\n\r\n        <!-- 项目名称列（固定在左侧） -->\r\n        <el-table-column prop=\"title\" label=\"项目名称\" fixed=\"left\" width=\"200\" />\r\n\r\n        <!-- 封面图片列 -->\r\n        <el-table-column label=\"封面\" width=\"250\">\r\n          <template #default=\"{ row }\">\r\n            <el-image\r\n                style=\"width: 200px; height: 120px; border-radius: 4px\"\r\n                :src=\"row.image\"\r\n                fit=\"cover\"\r\n            />\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 项目分类列 -->\r\n        <el-table-column label=\"项目分类\" width=\"120\">\r\n          <template #default=\"{ row }\">\r\n            <span>{{ getCategoryLabel(row.category) }}</span>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 是否推荐列 -->\r\n        <el-table-column label=\"是否推荐\" width=\"120\">\r\n          <template #default=\"{ row }\">\r\n            <el-switch\r\n                inline-prompt\r\n                active-text=\"是\"\r\n                inactive-text=\"否\"\r\n                v-model=\"row.isRecommended\"\r\n                :active-value=\"1\"\r\n                :inactive-value=\"0\"\r\n                :disabled=\"\r\n    row.isRecommended === 0 &&\r\n    projectList.filter((project) => project.isRecommended === 1).length > 8\r\n  \"\r\n                @change=\"handleRecommendChange(row)\"\r\n            />\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 机构信息列 -->\r\n        <el-table-column prop=\"orgInfo.initiator\" label=\"发起机构\" width=\"180\" />\r\n        <el-table-column prop=\"orgInfo.receiver\" label=\"善款接收机构\" width=\"180\" />\r\n        <el-table-column prop=\"orgInfo.executor\" label=\"执行机构\" width=\"180\" />\r\n\r\n        <!-- 其他列 -->\r\n        <el-table-column prop=\"recordNumber\" label=\"备案编号\" width=\"150\" />\r\n        <el-table-column prop=\"targetAmount\" label=\"目标金额\" width=\"120\" />\r\n        <el-table-column prop=\"raisedAmount\" label=\"已筹金额\" width=\"120\" />\r\n        <el-table-column prop=\"donationCount\" label=\"爱心次数\" width=\"100\" />\r\n        <el-table-column prop=\"startDate\" label=\"开始日期\" width=\"120\" />\r\n        <el-table-column prop=\"endDate\" label=\"结束日期\" width=\"120\" />\r\n\r\n        <!-- projectInfo 相关列 -->\r\n        <el-table-column prop=\"projectInfo.purpose\" label=\"项目目的\" width=\"200\" />\r\n        <el-table-column prop=\"projectInfo.cost\" label=\"项目成本\" width=\"120\" />\r\n        <el-table-column prop=\"projectInfo.surplusPlan\" label=\"剩余财产处理\" width=\"150\" />\r\n        <el-table-column prop=\"projectInfo.invoiceMethod\" label=\"发票开具方式\" width=\"150\" />\r\n        <el-table-column prop=\"projectInfo.contact\" label=\"联系方式\" width=\"120\" />\r\n        <el-table-column prop=\"projectInfo.fundUsage\" label=\"资金用途\" width=\"150\" />\r\n        <el-table-column prop=\"projectInfo.beneficiaries\" label=\"受益对象\" width=\"150\" />\r\n        <el-table-column prop=\"projectInfo.leader\" label=\"负责人\" width=\"120\" />\r\n\r\n        <!-- 操作列（固定在右侧） -->\r\n        <el-table-column label=\"操作\" width=\"180\" fixed=\"right\">\r\n          <template #default=\"{ row }\">\r\n            <el-button type=\"primary\" size=\"default\" @click=\"handleView(row)\">查看</el-button>\r\n            <el-button type=\"warning\" size=\"default\" @click=\"handleEdit(row)\">编辑</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页组件 -->\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"projectList.length\"\r\n            :page-size=\"pageSize\"\r\n            :current-page=\"currentPage\"\r\n            :page-sizes=\"[5, 10, 20, 50]\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handlePageChange\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 查看弹窗 -->\r\n    <el-dialog\r\n        v-if=\"currentProject\"\r\n        v-model=\"viewDialogVisible\"\r\n        title=\"项目详情\"\r\n        width=\"50%\"\r\n        center\r\n    >\r\n      <div>\r\n        <!-- 上半部分：左右布局 -->\r\n        <el-row :gutter=\"20\">\r\n          <!-- 左边：图片 -->\r\n          <el-col :span=\"12\">\r\n            <el-image\r\n                style=\"width: 100%; border-radius: 4px\"\r\n                :src=\"currentProject.image\"\r\n                fit=\"cover\"\r\n            />\r\n          </el-col>\r\n          <!-- 右边：项目基本信息 -->\r\n          <el-col :span=\"12\">\r\n            <div class=\"project-info\">\r\n              <div class=\"info-item\">\r\n                <span class=\"label\">项目名称：</span>\r\n                <span class=\"value\">{{ currentProject.title }}</span>\r\n              </div>\r\n              <div class=\"info-item\">\r\n                <span class=\"label\">备案编号：</span>\r\n                <span class=\"value\">{{ currentProject.recordNumber }}</span>\r\n              </div>\r\n              <div class=\"info-item\">\r\n                <span class=\"label\">目标金额：</span>\r\n                <span class=\"value\">￥{{ currentProject.targetAmount }} 元</span>\r\n              </div>\r\n              <div class=\"info-item\">\r\n                <span class=\"label\">已筹金额：</span>\r\n                <span class=\"value\">￥{{ currentProject.raisedAmount }} 元</span>\r\n              </div>\r\n              <div class=\"info-item\">\r\n                <span class=\"label\">爱心次数：</span>\r\n                <span class=\"value\">{{ currentProject.donationCount }} 次</span>\r\n              </div>\r\n              <div class=\"info-item\">\r\n                <span class=\"label\">起止日期：</span>\r\n                <span class=\"value\">{{ currentProject.startDate }} 至 {{ currentProject.endDate }}</span>\r\n              </div>\r\n            </div>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <!-- 项目详情 -->\r\n        <div class=\"info-section\">\r\n          <h2>项目详情</h2>\r\n          <p style=\"font-family: 仿宋, serif;\">{{ currentProject.details }}</p>\r\n        </div>\r\n\r\n        <!-- 慈善机构信息 -->\r\n        <div class=\"info-section\" v-if=\"currentProject.orgInfo\">\r\n          <h2>慈善机构信息</h2>\r\n          <ul class=\"info-list\">\r\n            <li><strong>发起机构：</strong>{{ currentProject.orgInfo.initiator }}</li>\r\n            <li><strong>善款接收机构：</strong>{{ currentProject.orgInfo.receiver }}</li>\r\n            <li><strong>执行机构：</strong>{{ currentProject.orgInfo.executor }}</li>\r\n          </ul>\r\n        </div>\r\n\r\n        <!-- 项目信息 -->\r\n        <div class=\"info-section\" v-if=\"currentProject.projectInfo\">\r\n          <h2>项目信息</h2>\r\n          <ul class=\"info-list\">\r\n            <li><strong>募捐目的：</strong>{{ currentProject.projectInfo.purpose }}</li>\r\n            <li><strong>募捐成本：</strong>{{ currentProject.projectInfo.cost }}</li>\r\n            <li><strong>剩余财产处理方案：</strong>{{ currentProject.projectInfo.surplusPlan }}</li>\r\n            <li><strong>发票开具方式：</strong>{{ currentProject.projectInfo.invoiceMethod }}</li>\r\n            <li><strong>联系方式：</strong>{{ currentProject.projectInfo.contact }}</li>\r\n            <li><strong>募得款物用途：</strong>{{ currentProject.projectInfo.fundUsage }}</li>\r\n            <li><strong>受益人：</strong>{{ currentProject.projectInfo.beneficiaries }}</li>\r\n            <li><strong>活动负责人：</strong>{{ currentProject.projectInfo.leader }}</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- 编辑/添加抽屉 -->\r\n    <el-drawer\r\n        v-model=\"drawerVisible\"\r\n        :title=\"isEdit ? '编辑项目' : '添加项目'\"\r\n        direction=\"rtl\"\r\n        size=\"40%\"\r\n    >\r\n      <!-- 表单 -->\r\n      <el-form\r\n          :model=\"formData\"\r\n          :rules=\"formRules\"\r\n          label-width=\"120px\"\r\n          ref=\"formRef\"\r\n      >\r\n        <!-- 项目名称 -->\r\n        <el-form-item label=\"项目名称\" prop=\"title\">\r\n          <el-input v-model=\"formData.title\" placeholder=\"请输入项目名称\" />\r\n        </el-form-item>\r\n\r\n        <!-- 项目分类 -->\r\n        <el-form-item label=\"项目分类\" prop=\"category\">\r\n          <el-select\r\n              v-model=\"formData.category\"\r\n              placeholder=\"请选择分类\"\r\n          >\r\n            <el-option label=\"扶贫济困\" :value=\"0\" />\r\n            <el-option label=\"健康医疗\" :value=\"1\" />\r\n            <el-option label=\"助老扶幼\" :value=\"2\" />\r\n            <el-option label=\"文化教育\" :value=\"3\" />\r\n            <el-option label=\"社会服务\" :value=\"4\" />\r\n            <el-option label=\"科技环保\" :value=\"5\" />\r\n            <el-option label=\"灾难救助\" :value=\"6\" />\r\n            <el-option label=\"专项基金\" :value=\"7\" />\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <!-- 封面图片 -->\r\n        <el-form-item label=\"封面图片\" prop=\"image\">\r\n          <div class=\"image-upload\">\r\n            <el-image\r\n                v-if=\"formData.image\"\r\n                style=\"width: 200px; height: 120px; border-radius: 4px; cursor: pointer\"\r\n                :src=\"formData.image\"\r\n                fit=\"cover\"\r\n                @click=\"triggerFileInput\"\r\n            />\r\n            <div\r\n                v-else\r\n                class=\"image-placeholder\"\r\n                @click=\"triggerFileInput\"\r\n            >\r\n              <span>点击上传封面</span>\r\n            </div>\r\n            <input\r\n                type=\"file\"\r\n                ref=\"fileInput\"\r\n                style=\"display: none\"\r\n                @change=\"handleFileChange\"\r\n                accept=\"image/*\"\r\n            />\r\n          </div>\r\n        </el-form-item>\r\n\r\n        <!-- 其他表单项 -->\r\n        <el-form-item label=\"项目编号\" prop=\"recordNumber\">\r\n          <el-input v-model=\"formData.recordNumber\" placeholder=\"请输入项目编号\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"目标金额\" prop=\"targetAmount\">\r\n          <el-input v-model=\"formData.targetAmount\" placeholder=\"请输入目标金额\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"已筹金额\" prop=\"raisedAmount\">\r\n          <el-input v-model=\"formData.raisedAmount\" placeholder=\"请输入已筹金额\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"爱心次数\" prop=\"donationCount\">\r\n          <el-input v-model=\"formData.donationCount\" placeholder=\"请输入爱心次数\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"开始日期\" prop=\"startDate\">\r\n          <el-date-picker\r\n              v-model=\"formData.startDate\"\r\n              type=\"date\"\r\n              placeholder=\"选择开始日期\"\r\n              value-format=\"YYYY-MM-DD\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"结束日期\" prop=\"endDate\">\r\n          <el-date-picker\r\n              v-model=\"formData.endDate\"\r\n              type=\"date\"\r\n              placeholder=\"选择结束日期\"\r\n              value-format=\"YYYY-MM-DD\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"发起机构\" prop=\"orgInfo.initiator\">\r\n          <el-input v-model=\"formData.orgInfo.initiator\" placeholder=\"请输入发起机构\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"善款接收机构\" prop=\"orgInfo.receiver\">\r\n          <el-input v-model=\"formData.orgInfo.receiver\" placeholder=\"请输入善款接收机构\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"执行机构\" prop=\"orgInfo.executor\">\r\n          <el-input v-model=\"formData.orgInfo.executor\" placeholder=\"请输入执行机构\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"项目目的\" prop=\"projectInfo.purpose\">\r\n          <el-input v-model=\"formData.projectInfo.purpose\" placeholder=\"请输入项目目的\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"项目成本\" prop=\"projectInfo.cost\">\r\n          <el-input v-model=\"formData.projectInfo.cost\" placeholder=\"请输入项目成本\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"剩余财产处理\" prop=\"projectInfo.surplusPlan\">\r\n          <el-input v-model=\"formData.projectInfo.surplusPlan\" placeholder=\"请输入剩余财产处理方式\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"发票开具方式\" prop=\"projectInfo.invoiceMethod\">\r\n          <el-input v-model=\"formData.projectInfo.invoiceMethod\" placeholder=\"请输入发票开具方式\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"联系方式\" prop=\"projectInfo.contact\">\r\n          <el-input v-model=\"formData.projectInfo.contact\" placeholder=\"请输入联系方式\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"资金用途\" prop=\"projectInfo.fundUsage\">\r\n          <el-input v-model=\"formData.projectInfo.fundUsage\" placeholder=\"请输入资金用途\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"受益对象\" prop=\"projectInfo.beneficiaries\">\r\n          <el-input v-model=\"formData.projectInfo.beneficiaries\" placeholder=\"请输入受益对象\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"负责人\" prop=\"projectInfo.leader\">\r\n          <el-input v-model=\"formData.projectInfo.leader\" placeholder=\"请输入负责人\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"项目详情\" prop=\"details\">\r\n          <el-input\r\n              v-model=\"formData.details\"\r\n              type=\"textarea\"\r\n              :rows=\"4\"\r\n              placeholder=\"请输入项目详情\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <!-- 抽屉底部按钮 -->\r\n      <template #footer>\r\n        <el-button @click=\"drawerVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\">{{ isEdit ? '保存' : '添加' }}</el-button>\r\n      </template>\r\n    </el-drawer>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { ElMessage, ElMessageBox } from 'element-plus';\r\nimport axios from 'axios';\r\n\r\n// 项目列表数据\r\nconst projectList = ref([]);\r\n\r\n// 查询表单数据\r\nconst queryForm = ref({\r\n  title: '', // 项目名称\r\n  recordNumber: '', // 项目编号\r\n  category: null, // 项目分类\r\n  dateRange: [], // 时间范围\r\n});\r\n\r\n// 分页相关状态\r\nconst currentPage = ref(1); // 当前页码\r\nconst pageSize = ref(5); // 每页显示条数\r\n\r\n// 选中的项目\r\nconst selectedProjects = ref([]);\r\n\r\n// 查看弹窗相关状态\r\nconst viewDialogVisible = ref(false);\r\nconst currentProject = ref(null);\r\n\r\n// 编辑/添加抽屉相关状态\r\nconst drawerVisible = ref(false);\r\nconst isEdit = ref(false); // 是否为编辑模式\r\nconst formData = ref({\r\n  title: '',\r\n  recordNumber: '',\r\n  targetAmount: '',\r\n  raisedAmount: '',\r\n  donationCount: '',\r\n  startDate: '',\r\n  endDate: '',\r\n  category: null,\r\n  isRecommended: false, // 是否推荐\r\n  orgInfo: {\r\n    initiator: '',\r\n    receiver: '',\r\n    executor: '',\r\n  },\r\n  projectInfo: {\r\n    purpose: '',\r\n    cost: '',\r\n    surplusPlan: '',\r\n    invoiceMethod: '',\r\n    contact: '',\r\n    fundUsage: '',\r\n    beneficiaries: '',\r\n    leader: '',\r\n  },\r\n  details: '',\r\n  image: '',\r\n});\r\n\r\n\r\n\r\n// 分页后的项目列表\r\nconst paginatedProjects = computed(() => {\r\n  const start = (currentPage.value - 1) * pageSize.value;\r\n  const end = start + pageSize.value;\r\n  return projectList.value.slice(start, end);\r\n});\r\n\r\n// 获取分类名称\r\nconst getCategoryLabel = (category) => {\r\n  const categoryMap = {\r\n    0: '扶贫济困',\r\n    1: '健康医疗',\r\n    2: '助老扶幼',\r\n    3: '文化教育',\r\n    4: '社会服务',\r\n    5: '科技环保',\r\n    6: '灾难救助',\r\n    7: '专项基金',\r\n  };\r\n  return categoryMap[category] || '未知分类';\r\n};\r\n\r\n// 获取项目数据\r\nconst fetchProjects = async () => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    try {\r\n      const params = {\r\n        title: queryForm.value.title,\r\n        recordNumber: queryForm.value.recordNumber,\r\n        category: queryForm.value.category, // 增加分类参数\r\n        startDate: queryForm.value.dateRange?.[0],\r\n        endDate: queryForm.value.dateRange?.[1],\r\n      };\r\n\r\n      const response = await axios.get('/admin/projects', {\r\n        params,\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.data.code === 200) {\r\n        // 处理时间戳\r\n        projectList.value = response.data.data.map(project => ({\r\n          ...project,\r\n          startDate: new Date(project.startDate).toISOString().split('T')[0], // 转换为 YYYY-MM-DD\r\n          endDate: new Date(project.endDate).toISOString().split('T')[0], // 转换为 YYYY-MM-DD\r\n        }));\r\n      } else {\r\n        console.error('获取项目列表失败:', response.data.msg);\r\n        ElMessage.error('获取项目列表失败');\r\n      }\r\n    } catch (error) {\r\n      console.error('获取项目列表失败:', error);\r\n      ElMessage.error('获取项目列表失败：' + error.message);\r\n    }\r\n  } else {\r\n    ElMessage.error('用户未登录，请先登录');\r\n  }\r\n};\r\n\r\n\r\nconst handleRecommendChange = async (row) => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      ElMessage.error('用户未登录，请先登录');\r\n      return;\r\n    }\r\n\r\n    // 检查当前推荐的项目数量\r\n    const recommendedCount = projectList.value.filter(\r\n        (project) => project.isRecommended === 1\r\n    ).length;\r\n\r\n    // 如果当前项目已经是推荐状态，且推荐数量已经达到八个，阻止操作\r\n    if (row.isRecommended === 1 && recommendedCount > 8) {\r\n      ElMessage.warning('推荐数量已达到上限（8个），无法继续推荐');\r\n      row.isRecommended = 0; // 恢复为未推荐状态\r\n      return;\r\n    }\r\n\r\n    // 调用接口更新推荐状态\r\n    const response = await axios.put(\r\n        `/admin/projects/${row.id}/recommend`,\r\n        null, // 不需要请求体\r\n        {\r\n          params: {\r\n            isRecommended: row.isRecommended, // 传递推荐状态\r\n          },\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n    );\r\n\r\n    if (response.data.code === 200) {\r\n      ElMessage.success('推荐状态更新成功');\r\n    } else {\r\n      ElMessage.error('推荐状态更新失败');\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error('推荐状态更新失败：' + error.message);\r\n  }\r\n};\r\n\r\n// 表单验证规则\r\n// eslint-disable-next-line no-unused-vars\r\nconst formRules = ref({\r\n  title: [{ required: true, message: '项目名称不能为空', trigger: 'blur' }],\r\n  category: [{ required: true, message: '项目分类不能为空', trigger: 'change' }],\r\n  recordNumber: [{ required: true, message: '项目编号不能为空', trigger: 'blur' }],\r\n  targetAmount: [{ required: true, message: '目标金额不能为空', trigger: 'blur' }],\r\n  raisedAmount: [{ required: true, message: '已筹金额不能为空', trigger: 'blur' }],\r\n  donationCount: [{ required: true, message: '爱心次数不能为空', trigger: 'blur' }],\r\n  startDate: [{ required: true, message: '开始日期不能为空', trigger: 'change' }],\r\n  endDate: [{ required: true, message: '结束日期不能为空', trigger: 'change' }],\r\n  'orgInfo.initiator': [{ required: true, message: '发起机构不能为空', trigger: 'blur' }],\r\n  'orgInfo.receiver': [{ required: true, message: '善款接收机构不能为空', trigger: 'blur' }],\r\n  'orgInfo.executor': [{ required: true, message: '执行机构不能为空', trigger: 'blur' }],\r\n  'projectInfo.purpose': [{ required: true, message: '项目目的不能为空', trigger: 'blur' }],\r\n  'projectInfo.cost': [{ required: true, message: '项目成本不能为空', trigger: 'blur' }],\r\n  'projectInfo.surplusPlan': [{ required: true, message: '剩余财产处理不能为空', trigger: 'blur' }],\r\n  'projectInfo.invoiceMethod': [{ required: true, message: '发票开具方式不能为空', trigger: 'blur' }],\r\n  'projectInfo.contact': [{ required: true, message: '联系方式不能为空', trigger: 'blur' }],\r\n  'projectInfo.fundUsage': [{ required: true, message: '资金用途不能为空', trigger: 'blur' }],\r\n  'projectInfo.beneficiaries': [{ required: true, message: '受益对象不能为空', trigger: 'blur' }],\r\n  'projectInfo.leader': [{ required: true, message: '负责人不能为空', trigger: 'blur' }],\r\n  details: [{ required: true, message: '项目详情不能为空', trigger: 'blur' }],\r\n  image: [{ required: true, message: '封面图片不能为空', trigger: 'change' }],\r\n});\r\n\r\n// 查看项目详情\r\nconst handleView = (project) => {\r\n  currentProject.value = project;\r\n  viewDialogVisible.value = true;\r\n};\r\n\r\n// 编辑项目\r\nconst handleEdit = (project) => {\r\n  isEdit.value = true;\r\n  formData.value = { ...project };\r\n  drawerVisible.value = true;\r\n};\r\n\r\n// 添加项目\r\nconst handleAdd = () => {\r\n  isEdit.value = false;\r\n  formData.value = {\r\n    title: '',\r\n    recordNumber: '',\r\n    targetAmount: '',\r\n    raisedAmount: '',\r\n    donationCount: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    orgInfo: {\r\n      initiator: '',\r\n      receiver: '',\r\n      executor: '',\r\n    },\r\n    projectInfo: {\r\n      purpose: '',\r\n      cost: '',\r\n      surplusPlan: '',\r\n      invoiceMethod: '',\r\n      contact: '',\r\n      fundUsage: '',\r\n      beneficiaries: '',\r\n      leader: '',\r\n    },\r\n    details: '',\r\n    image: '', // 封面图片\r\n  };\r\n  drawerVisible.value = true;\r\n};\r\n\r\nconst formRef = ref(null); // 表单引用\r\n// 提交表单（添加或编辑）\r\nconst handleSubmit = async () => {\r\n  try {\r\n    // 验证表单\r\n    await formRef.value.validate();\r\n\r\n    // 如果验证通过，继续提交逻辑\r\n    const payload = {\r\n      ...formData.value,\r\n      startDate: new Date(formData.value.startDate).getTime(),\r\n      endDate: new Date(formData.value.endDate).getTime(),\r\n    };\r\n\r\n    if (isEdit.value) {\r\n      // 编辑逻辑\r\n      const response = await axios.put(`/admin/projects/${formData.value.id}`, payload, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.data.code === 200) {\r\n        await fetchProjects(); // 重新获取数据\r\n        ElMessage.success('编辑成功');\r\n      }\r\n    } else {\r\n      // 添加逻辑\r\n      const response = await axios.post('/admin/projects', payload, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.data.code === 200) {\r\n        await fetchProjects(); // 重新获取数据\r\n        ElMessage.success('添加成功');\r\n      }\r\n    }\r\n    drawerVisible.value = false;\r\n  } catch (error) {\r\n    // 捕获验证失败的错误\r\n    if (error instanceof Error) {\r\n      // 如果是表单验证失败，弹出全局提示\r\n      ElMessage.error('表单验证失败，请检查填写内容');\r\n    } else if (error !== 'cancel') {\r\n      // 其他错误（如网络请求失败）\r\n      ElMessage.error('必填项未填，请检查填写内容' );\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// 处理选中项目\r\nconst handleSelectionChange = (selection) => {\r\n  selectedProjects.value = selection;\r\n};\r\n\r\n// 批量删除项目\r\nconst handleBatchDelete = async () => {\r\n  try {\r\n    // 确认删除操作\r\n    await ElMessageBox.confirm('确定要删除选中的项目吗？', '提示', {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    });\r\n\r\n    // 获取选中的项目 ID 列表\r\n    const selectedIds = selectedProjects.value.map(project => project.id);\r\n\r\n    // 从 localStorage 中获取令牌\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      ElMessage.error('用户未登录，请先登录');\r\n      return;\r\n    }\r\n\r\n    // 发送批量删除请求，直接传递数组\r\n    await axios.post('/admin/projects/batch-delete', selectedIds, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`, // 添加令牌到请求头\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    // 重新获取项目列表\r\n    await fetchProjects();\r\n    ElMessage.success('删除成功');\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      ElMessage.error('删除失败: ' + error.message);\r\n    }\r\n  }\r\n};\r\n\r\n// 处理查询\r\nconst handleQuery = () => {\r\n  currentPage.value = 1;\r\n  fetchProjects(); // 根据查询条件获取数据\r\n};\r\n\r\n// 处理重置\r\nconst handleReset = () => {\r\n  queryForm.value = {\r\n    title: '',\r\n    recordNumber: '',\r\n    dateRange: [],\r\n  };\r\n  currentPage.value = 1;\r\n  fetchProjects(); // 重置后获取全部数据\r\n};\r\n\r\n// 处理每页条数变化\r\nconst handleSizeChange = (size) => {\r\n  pageSize.value = size;\r\n  currentPage.value = 1;\r\n};\r\n\r\n// 处理页码变化\r\nconst handlePageChange = (page) => {\r\n  currentPage.value = page;\r\n};\r\n\r\n// 文件输入框的引用\r\nconst fileInput = ref(null);\r\n\r\n// 触发文件选择\r\nconst triggerFileInput = () => {\r\n  fileInput.value.click(); // 模拟点击文件输入框\r\n};\r\n\r\n// 文件选择后的处理\r\nconst handleFileChange = async (event) => {\r\n  const file = event.target.files[0]; // 获取选择的文件\r\n  if (!file) return;\r\n\r\n  // 校验文件类型\r\n  if (!file.type.startsWith('image/')) {\r\n    ElMessage.error('只能上传图片文件！');\r\n    return;\r\n  }\r\n\r\n  // 校验文件大小（限制为 10MB）\r\n  const maxSize = 10 * 1024 * 1024; // 10MB\r\n  if (file.size > maxSize) {\r\n    ElMessage.error('文件大小不能超过 10MB');\r\n    return;\r\n  }\r\n\r\n  // 上传文件\r\n  try {\r\n    const uploadFormData = new FormData(); // 使用 uploadFormData 避免冲突\r\n    uploadFormData.append('file', file); // 将文件添加到 FormData\r\n\r\n    // 发送上传请求\r\n    const response = await axios.post('/files/upload', uploadFormData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data', // 设置请求头\r\n      },\r\n    });\r\n\r\n    // 处理上传成功\r\n    if (response.data.code === 200) {\r\n      formData.value.image = response.data.data; // 更新图片 URL\r\n      ElMessage.success('上传成功');\r\n    } else {\r\n      ElMessage.error(response.data.message || '上传失败');\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error('上传失败：' + error.message);\r\n  }\r\n};\r\n\r\n// 组件挂载时初始化数据\r\nonMounted(() => {\r\n  fetchProjects(); // 页面加载时获取全部数据\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* 外层容器样式 */\r\n.project-container {\r\n  border: 1px solid var(--el-border-color-light);\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n}\r\n\r\n/* 项目列表模块样式 */\r\n.project-list {\r\n  width: 100%;\r\n}\r\n\r\n/* 查询表单容器样式 */\r\n.query-form-container {\r\n  background-color: var(--el-bg-color-page);\r\n  padding: 20px;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* 按钮组样式 */\r\n.button-group {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n/* 操作栏样式 */\r\n.action-bar {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* 设置表格容器的宽度和溢出滚动 */\r\n.el-table {\r\n  width: 100%;\r\n  overflow-x: auto;\r\n}\r\n\r\n/* 分页样式 */\r\n.pagination {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n/* 图片上传区域样式 */\r\n.image-upload {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16px;\r\n}\r\n\r\n.image-placeholder {\r\n  width: 200px;\r\n  height: 120px;\r\n  border: 1px dashed #ccc;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  color: #999;\r\n}\r\n\r\n.image-placeholder:hover {\r\n  border-color: #409eff;\r\n  color: #409eff;\r\n}\r\n\r\n/* 项目信息样式 */\r\n.project-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1em; /* 10px / 16px = 0.625em */\r\n}\r\n\r\n.info-item {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.info-item .label {\r\n  font-weight: bold;\r\n}\r\n\r\n.info-item .value {\r\n  color: var(--el-text-color-regular);\r\n}\r\n\r\n/* 信息部分样式 */\r\n.info-section {\r\n  margin-top: 20px;\r\n}\r\n\r\n.info-section h2 {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n  color: var(--el-text-color-primary);\r\n}\r\n\r\n.info-list {\r\n  list-style: none;\r\n  padding-left: 20px;\r\n  margin: 0;\r\n}\r\n\r\n.info-list li {\r\n  margin-bottom: 8px;\r\n  color: var(--el-text-color-regular);\r\n}\r\n\r\n.info-list strong {\r\n  font-weight: bold;\r\n  margin-right: 8px;\r\n}\r\n</style>\r\n","import script from \"./ProjectList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProjectList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ProjectList.vue?vue&type=style&index=0&id=d00f012e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-d00f012e\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"finance-container\">\r\n    <!-- 查询表单 -->\r\n    <div class=\"query-form-container\">\r\n      <el-form :inline=\"true\" :model=\"queryForm\" class=\"query-form\">\r\n        <el-row :gutter=\"20\">\r\n          <!-- 左侧表单内容 -->\r\n          <el-col :span=\"18\">\r\n            <el-row :gutter=\"10\">\r\n\r\n\r\n\r\n\r\n              <!-- 支付方式 -->\r\n              <el-col :span=\"8\">\r\n                <el-form-item label=\"支付方式\">\r\n                  <el-select\r\n                      v-model=\"queryForm.paymentMethod\"\r\n                      placeholder=\"请选择支付方式\"\r\n                      clearable\r\n                      style=\"width: 100px\"\r\n                  >\r\n                    <el-option label=\"支付宝\" :value=\"0\" />\r\n                    <el-option label=\"微信\" :value=\"1\" />\r\n                  </el-select>\r\n                </el-form-item>\r\n              </el-col>\r\n\r\n\r\n              <!-- 时间范围 -->\r\n              <el-col :span=\"16\">\r\n                <el-form-item label=\"时间范围\">\r\n                  <el-date-picker\r\n                      v-model=\"queryForm.dateRange\"\r\n                      type=\"daterange\"\r\n                      range-separator=\"至\"\r\n                      start-placeholder=\"开始日期\"\r\n                      end-placeholder=\"结束日期\"\r\n                      value-format=\"YYYY-MM-DD\"\r\n                  />\r\n                </el-form-item>\r\n              </el-col>\r\n\r\n              <!-- 项目名称 -->\r\n              <el-col :span=\"8\">\r\n                <el-form-item label=\"项目名称\">\r\n                  <el-input\r\n                      v-model=\"queryForm.projectName\"\r\n                      placeholder=\"请输入项目名称\"\r\n                      clearable\r\n                  />\r\n                </el-form-item>\r\n              </el-col>\r\n\r\n              <!-- 地址搜索 -->\r\n              <el-col :span=\"16\">\r\n                <el-form-item label=\"地址\">\r\n                  <el-input\r\n                      v-model=\"queryForm.address\"\r\n                      placeholder=\"请输入地址\"\r\n                      clearable\r\n                  />\r\n                </el-form-item>\r\n              </el-col>\r\n            </el-row>\r\n          </el-col>\r\n\r\n          <!-- 右侧按钮 -->\r\n          <el-col :span=\"6\" class=\"button-group\">\r\n            <el-form-item>\r\n              <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\r\n              <el-button @click=\"handleReset\">重置</el-button>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n      </el-form>\r\n    </div>\r\n\r\n    <!-- 操作栏 -->\r\n    <div class=\"action-bar\">\r\n      <!-- 导出按钮 -->\r\n      <el-button type=\"success\" @click=\"handleExport\">导出明细</el-button>\r\n    </div>\r\n\r\n    <!-- 收支明细表格 -->\r\n    <el-table\r\n        :data=\"paginatedRecords\"\r\n        style=\"width: 100%\"\r\n        border\r\n        :header-cell-style=\"{ background: 'var(--el-bg-color-page)', color: 'var(--el-text-color-primary)' }\"\r\n    >\r\n      <!-- 项目名称 -->\r\n      <el-table-column label=\"项目名称\" width=\"180\">\r\n        <template #default=\"{ row }\">\r\n          <span>{{ row.projectName }}</span>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <!-- 用户信息 -->\r\n      <el-table-column label=\"用户\" width=\"180\">\r\n        <template #default=\"{ row }\">\r\n          <div class=\"user-info\">\r\n            <el-avatar :size=\"40\" :src=\"row.userAvatar\" />\r\n            <span class=\"username\">{{ row.username }}</span>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <!-- 金额 -->\r\n      <el-table-column prop=\"amount\" label=\"金额\" width=\"120\">\r\n        <template #default=\"{ row }\">\r\n          <span>￥{{ row.amount.toFixed(2) }}</span>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <!-- 时间 -->\r\n      <el-table-column prop=\"time\" label=\"时间\" width=\"180\">\r\n        <template #default=\"{ row }\">\r\n          <span>{{ formatDate(row.time) }}</span>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <!-- 分类 -->\r\n      <el-table-column prop=\"category\" label=\"捐赠类型\" width=\"120\" />\r\n\r\n      <!-- 支付方式 -->\r\n      <el-table-column label=\"支付方式\" width=\"120\">\r\n        <template #default=\"{ row }\">\r\n          <el-tag :type=\"row.paymentMethod === 0 ? 'success' : 'primary'\">\r\n            {{ row.paymentMethod === 0 ? '支付宝' : '微信' }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <!-- 是否来自境外 -->\r\n      <el-table-column label=\"是否境外\" width=\"120\">\r\n        <template #default=\"{ row }\">\r\n          <el-tag :type=\"row.isForeign ? 'danger' : 'success'\">\r\n            {{ row.isForeign ? '是' : '否' }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <!-- 地址 -->\r\n      <el-table-column prop=\"address\" label=\"地址\" />\r\n    </el-table>\r\n\r\n    <!-- 分页组件 -->\r\n    <div class=\"pagination\">\r\n      <el-pagination\r\n          background\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"financeRecords.length\"\r\n          :page-size=\"pageSize\"\r\n          :current-page=\"currentPage\"\r\n          :page-sizes=\"[5, 10, 20, 50]\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handlePageChange\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { ElMessage } from 'element-plus';\r\nimport axios from 'axios';\r\nimport * as XLSX from 'xlsx'; // 引入 xlsx 库\r\n\r\n// 收支明细数据\r\nconst financeRecords = ref([]);\r\n\r\n// 查询表单数据\r\nconst queryForm = ref({\r\n  address: '', // 地址\r\n  dateRange: [], // 时间范围\r\n  paymentMethod: null, // 支付方式\r\n});\r\n\r\n// 分页相关状态\r\nconst currentPage = ref(1); // 当前页码\r\nconst pageSize = ref(10); // 每页显示条数\r\n\r\n// 分页后的收支明细数据\r\nconst paginatedRecords = computed(() => {\r\n  const start = (currentPage.value - 1) * pageSize.value;\r\n  const end = start + pageSize.value;\r\n  return financeRecords.value.slice(start, end);\r\n});\r\n\r\n// 格式化日期\r\nconst formatDate = (date) => {\r\n  return new Date(date).toLocaleString();\r\n};\r\n\r\n// 获取收支明细数据\r\nconst fetchFinanceRecords = async () => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    const params = {\r\n      projectName: queryForm.value.projectName, // 项目名称\r\n      address: queryForm.value.address, // 地址\r\n      startDate: queryForm.value.dateRange?.[0], // 开始日期\r\n      endDate: queryForm.value.dateRange?.[1], // 结束日期\r\n      paymentMethod: queryForm.value.paymentMethod, // 支付方式\r\n    };\r\n\r\n    const response = await axios.get('/admin/finance-records', {\r\n      params,\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n    if (response.data.code === 200) {\r\n      financeRecords.value = response.data.data;\r\n    } else {\r\n      ElMessage.error('获取收支明细失败：' + response.data.msg);\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error('获取收支明细失败：' + error.message);\r\n  }\r\n};\r\n\r\n// 处理查询\r\nconst handleQuery = () => {\r\n  currentPage.value = 1;\r\n  fetchFinanceRecords();\r\n};\r\n\r\n// 处理重置\r\nconst handleReset = () => {\r\n  queryForm.value = {\r\n    projectName: '', // 项目名称\r\n    address: '', // 地址\r\n    dateRange: [], // 时间范围\r\n    paymentMethod: null, // 支付方式\r\n  };\r\n  currentPage.value = 1;\r\n  fetchFinanceRecords();\r\n};\r\n\r\n// 处理每页条数变化\r\nconst handleSizeChange = (size) => {\r\n  pageSize.value = size;\r\n  currentPage.value = 1;\r\n};\r\n\r\n// 处理页码变化\r\nconst handlePageChange = (page) => {\r\n  currentPage.value = page;\r\n};\r\n\r\n// 导出 Excel 文件\r\nconst handleExport = () => {\r\n  if (financeRecords.value.length === 0) {\r\n    ElMessage.warning('没有数据可导出');\r\n    return;\r\n  }\r\n\r\n  // 定义表头\r\n  const headers = [\r\n    '项目名称',\r\n    '用户',\r\n    '金额',\r\n    '时间',\r\n    '捐赠分类',\r\n    '支付方式',\r\n    '是否境外',\r\n    '地址',\r\n  ];\r\n\r\n  // 定义数据列\r\n  const data = financeRecords.value.map((item) => [\r\n    item.projectName,\r\n    item.username,\r\n    `￥${item.amount.toFixed(2)}`,\r\n    formatDate(item.time),\r\n    item.category,\r\n    item.paymentMethod === 0 ? '支付宝' : '微信',\r\n    item.isForeign ? '是' : '否',\r\n    item.address,\r\n  ]);\r\n\r\n  // 创建工作表\r\n  const worksheet = XLSX.utils.aoa_to_sheet([headers, ...data]);\r\n  const workbook = XLSX.utils.book_new();\r\n  XLSX.utils.book_append_sheet(workbook, worksheet, '收支明细');\r\n\r\n  // 导出文件\r\n  XLSX.writeFile(workbook, '收支明细.xlsx');\r\n  ElMessage.success('导出成功');\r\n};\r\n\r\n// 组件挂载时初始化数据\r\nonMounted(() => {\r\n  fetchFinanceRecords();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.finance-container {\r\n  border: 1px solid var(--el-border-color-light);\r\n  padding: 20px;\r\n}\r\n.query-form-container {\r\n\r\n  background-color: var(--el-bg-color-page);\r\n  padding: 20px;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n}\r\n.button-group {\r\n  margin-top: 40px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n.pagination {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n.user-info {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.user-info .username {\r\n  margin-left: 10px;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  color: var(--el-text-color-primary);\r\n}\r\n\r\n/* 操作栏样式 */\r\n.action-bar {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n","import script from \"./ProjectIncome.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProjectIncome.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ProjectIncome.vue?vue&type=style&index=0&id=22ebc3c6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-22ebc3c6\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"project-container\">\r\n    <!-- 项目评价列表模块 -->\r\n    <div class=\"review-list\">\r\n      <!-- 查询表单 -->\r\n      <div class=\"query-form-container\">\r\n        <el-form :inline=\"true\" :model=\"queryForm\" class=\"query-form\">\r\n          <el-row :gutter=\"20\">\r\n            <!-- 左侧表单内容 -->\r\n            <el-col :span=\"18\">\r\n              <el-row :gutter=\"10\">\r\n                <!-- 评价人 -->\r\n                <el-col :span=\"8\">\r\n                  <el-form-item label=\"评价人\">\r\n                    <el-input\r\n                        v-model=\"queryForm.reviewer\"\r\n                        placeholder=\"请输入评价人\"\r\n                        clearable\r\n                    />\r\n                  </el-form-item>\r\n                </el-col>\r\n\r\n                <!-- 时间范围 -->\r\n                <el-col :span=\"8\">\r\n                  <el-form-item label=\"时间范围\">\r\n                    <el-date-picker\r\n                        v-model=\"queryForm.dateRange\"\r\n                        type=\"daterange\"\r\n                        range-separator=\"至\"\r\n                        start-placeholder=\"开始日期\"\r\n                        end-placeholder=\"结束日期\"\r\n                        value-format=\"YYYY-MM-DD\"\r\n                    />\r\n                  </el-form-item>\r\n                </el-col>\r\n              </el-row>\r\n            </el-col>\r\n\r\n            <!-- 右侧按钮 -->\r\n            <el-col :span=\"6\" class=\"button-group\">\r\n              <el-form-item>\r\n                <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\r\n                <el-button @click=\"handleReset\">重置</el-button>\r\n              </el-form-item>\r\n            </el-col>\r\n          </el-row>\r\n        </el-form>\r\n      </div>\r\n\r\n      <!-- 操作栏 -->\r\n      <div class=\"action-bar\">\r\n        <!-- 删除按钮 -->\r\n        <el-button\r\n            type=\"danger\"\r\n            :disabled=\"selectedReviews.length === 0\"\r\n            @click=\"handleBatchDelete\"\r\n        >\r\n          批量删除\r\n        </el-button>\r\n      </div>\r\n\r\n      <!-- 评价表格 -->\r\n      <el-table\r\n          :data=\"paginatedReviews\"\r\n          style=\"width: 100%\"\r\n          border\r\n          @selection-change=\"handleSelectionChange\"\r\n          :header-cell-style=\"{ background: 'var(--el-bg-color-page)', color: 'var(--el-text-color-primary)' }\"\r\n      >\r\n        <!-- 多选列 -->\r\n        <el-table-column type=\"selection\" width=\"55\" />\r\n\r\n        <!-- 用户昵称列 -->\r\n        <el-table-column label=\"用户昵称\" width=\"180\">\r\n          <template #default=\"{ row }\">\r\n            <div class=\"user-info\">\r\n              <el-avatar :size=\"40\" :src=\"row.reviewerAvatar\" />\r\n              <span class=\"username\">{{ row.reviewer }}</span>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 项目名称列 -->\r\n        <el-table-column prop=\"projectTitle\" label=\"项目名称\" width=\"200\" />\r\n\r\n        <!-- 评价内容列 -->\r\n        <el-table-column prop=\"review\" label=\"评价内容\" />\r\n\r\n        <!-- 封禁状态列 -->\r\n        <el-table-column label=\"封禁状态\" width=\"120\">\r\n          <template #default=\"{ row }\">\r\n            <el-tag :type=\"row.isBanned ? 'danger' : 'success'\">\r\n              {{ row.isBanned ? '已封禁' : '正常' }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 操作列（固定在右侧） -->\r\n        <el-table-column label=\"操作\" width=\"180\" fixed=\"right\">\r\n          <template #default=\"{ row }\">\r\n            <el-button\r\n                :type=\"row.isBanned ? 'success' : 'warning'\"\r\n                size=\"default\"\r\n                @click=\"handleToggleBan(row)\"\r\n            >\r\n              {{ row.isBanned ? '解封' : '封禁' }}\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页组件 -->\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"reviewList.length\"\r\n            :page-size=\"pageSize\"\r\n            :current-page=\"currentPage\"\r\n            :page-sizes=\"[5, 10, 20, 50]\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handlePageChange\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 查看弹窗 -->\r\n    <el-dialog\r\n        v-if=\"currentReview\"\r\n        v-model=\"viewDialogVisible\"\r\n        title=\"评价详情\"\r\n        width=\"50%\"\r\n        center\r\n    >\r\n      <div>\r\n        <!-- 评价人信息 -->\r\n        <div class=\"info-section\">\r\n          <h2>评价人信息</h2>\r\n          <ul class=\"info-list\">\r\n            <li><strong>评价人：</strong>{{ currentReview.reviewer }}</li>\r\n            <li><strong>封禁状态：</strong>\r\n              <el-tag :type=\"currentReview.isBanned ? 'danger' : 'success'\">\r\n                {{ currentReview.isBanned ? '已封禁' : '正常' }}\r\n              </el-tag>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <!-- 评价内容 -->\r\n        <div class=\"info-section\">\r\n          <h2>评价内容</h2>\r\n          <p>{{ currentReview.review }}</p>\r\n        </div>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { ElMessage, ElMessageBox } from 'element-plus';\r\nimport axios from 'axios';\r\nimport { debounce } from 'lodash';\r\n\r\n// 评价列表数据\r\nconst reviewList = ref([]);\r\n\r\n// 查询表单数据\r\nconst queryForm = ref({\r\n  reviewer: '', // 评价人\r\n  dateRange: [], // 时间范围\r\n});\r\n\r\n// 分页相关状态\r\nconst currentPage = ref(1); // 当前页码\r\nconst pageSize = ref(10); // 每页显示条数\r\n\r\n// 选中的评价\r\nconst selectedReviews = ref([]);\r\n\r\n// 查看弹窗相关状态\r\nconst viewDialogVisible = ref(false);\r\nconst currentReview = ref(null);\r\n\r\n// 分页后的评价列表\r\nconst paginatedReviews = computed(() => {\r\n  const start = (currentPage.value - 1) * pageSize.value;\r\n  const end = start + pageSize.value;\r\n  return reviewList.value.slice(start, end);\r\n});\r\n\r\n// 获取评价数据\r\nconst fetchReviews = async () => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    try {\r\n      const params = {\r\n        reviewer: queryForm.value.reviewer,\r\n        startDate: queryForm.value.dateRange?.[0],\r\n        endDate: queryForm.value.dateRange?.[1],\r\n      };\r\n\r\n      const response = await axios.get('/admin/project-reviews', {\r\n        params,\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.data.code === 200) {\r\n        reviewList.value = response.data.data;\r\n      } else {\r\n        console.error('获取评价列表失败:', response.data.msg);\r\n        ElMessage.error('获取评价列表失败');\r\n      }\r\n    } catch (error) {\r\n      console.error('获取评价列表失败:', error);\r\n      ElMessage.error('获取评价列表失败：' + error.message);\r\n    }\r\n  } else {\r\n    ElMessage.error('用户未登录，请先登录');\r\n  }\r\n};\r\n\r\n// // 查看评价详情\r\n// const handleView = (review) => {\r\n//   currentReview.value = review;\r\n//   viewDialogVisible.value = true;\r\n// };\r\n\r\n// 处理选中评价\r\nconst handleSelectionChange = (selection) => {\r\n  selectedReviews.value = selection;\r\n};\r\n\r\n// 批量删除评价\r\nconst handleBatchDelete = async () => {\r\n  try {\r\n    // 确认删除操作\r\n    await ElMessageBox.confirm('确定要删除选中的评价吗？', '提示', {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    });\r\n\r\n    // 获取选中的评价 ID 列表\r\n    const selectedIds = selectedReviews.value.map(review => review.id);\r\n\r\n    // 发送批量删除请求\r\n    const token = localStorage.getItem('token');\r\n    await axios.post('/admin/project-reviews/batch-delete', selectedIds, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    // 重新获取评价列表\r\n    await fetchReviews();\r\n    ElMessage.success('删除成功');\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      ElMessage.error('删除失败: ' + error.message);\r\n    }\r\n  }\r\n};\r\n\r\n// 切换封禁状态（带防抖）\r\nconst handleToggleBan = debounce(async (review) => {\r\n  try {\r\n    const action = review.isBanned ? '解封' : '封禁';\r\n    await ElMessageBox.confirm(`确定要${action}该评价吗？`, '提示', {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    });\r\n\r\n    // 发送封禁/解封请求\r\n    const token = localStorage.getItem('token');\r\n    await axios.post(`/admin/project-reviews/${review.id}/toggle-ban`, null, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    // 重新获取评价列表\r\n    await fetchReviews();\r\n    ElMessage.success(`${action}成功`);\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      ElMessage.error(error.message);\r\n    }\r\n  }\r\n}, 300); // 防抖时间设置为 300ms\r\n\r\n// 处理查询\r\nconst handleQuery = () => {\r\n  currentPage.value = 1;\r\n  fetchReviews(); // 根据查询条件获取数据\r\n};\r\n\r\n// 处理重置\r\nconst handleReset = () => {\r\n  queryForm.value = {\r\n    reviewer: '',\r\n    dateRange: [],\r\n  };\r\n  currentPage.value = 1;\r\n  fetchReviews(); // 重置后获取全部数据\r\n};\r\n\r\n// 处理每页条数变化\r\nconst handleSizeChange = (size) => {\r\n  pageSize.value = size;\r\n  currentPage.value = 1;\r\n};\r\n\r\n// 处理页码变化\r\nconst handlePageChange = (page) => {\r\n  currentPage.value = page;\r\n};\r\n\r\n// 组件挂载时初始化数据\r\nonMounted(() => {\r\n  fetchReviews(); // 页面加载时获取全部数据\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* 外层容器样式 */\r\n.project-container {\r\n  border: 1px solid var(--el-border-color-light);\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n}\r\n\r\n/* 评价列表模块样式 */\r\n.review-list {\r\n  width: 100%;\r\n}\r\n\r\n/* 查询表单容器样式 */\r\n.query-form-container {\r\n  background-color: var(--el-bg-color-page);\r\n  padding: 20px;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* 按钮组样式 */\r\n.button-group {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n/* 操作栏样式 */\r\n.action-bar {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* 设置表格容器的宽度和溢出滚动 */\r\n.el-table {\r\n  width: 100%;\r\n  overflow-x: auto;\r\n}\r\n\r\n/* 分页样式 */\r\n.pagination {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n/* 用户信息样式 */\r\n.user-info {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.user-info .username {\r\n  margin-left: 10px;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  color: var(--el-text-color-primary);\r\n}\r\n\r\n/* 信息部分样式 */\r\n.info-section {\r\n  margin-top: 20px;\r\n}\r\n\r\n.info-section h2 {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n  color: var(--el-text-color-primary);\r\n}\r\n\r\n.info-list {\r\n  list-style: none;\r\n  padding-left: 20px;\r\n  margin: 0;\r\n}\r\n\r\n.info-list li {\r\n  margin-bottom: 8px;\r\n  color: var(--el-text-color-regular);\r\n}\r\n\r\n.info-list strong {\r\n  font-weight: bold;\r\n  margin-right: 8px;\r\n}\r\n</style>\r\n","import script from \"./ProjectReview.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProjectReview.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ProjectReview.vue?vue&type=style&index=0&id=5fbfa52e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5fbfa52e\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"barrage-container\">\r\n    <!-- 弹幕列表模块 -->\r\n    <div class=\"barrage-list\">\r\n      <!-- 查询表单 -->\r\n      <div class=\"query-form-container\">\r\n        <el-form :inline=\"true\" :model=\"queryForm\" class=\"query-form\">\r\n          <el-row :gutter=\"20\">\r\n            <!-- 左侧表单内容 -->\r\n            <el-col :span=\"18\">\r\n              <el-row :gutter=\"10\">\r\n                <!-- 用户账号 -->\r\n                <el-col :span=\"8\">\r\n                  <el-form-item label=\"用户账号\">\r\n                    <el-input\r\n                        v-model=\"queryForm.username\"\r\n                        placeholder=\"请输入用户账号\"\r\n                        clearable\r\n                    />\r\n                  </el-form-item>\r\n                </el-col>\r\n\r\n                <!-- 用户昵称 -->\r\n                <el-col :span=\"8\">\r\n                  <el-form-item label=\"用户昵称\">\r\n                    <el-input\r\n                        v-model=\"queryForm.nickname\"\r\n                        placeholder=\"请输入用户昵称\"\r\n                        clearable\r\n                    />\r\n                  </el-form-item>\r\n                </el-col>\r\n\r\n                <!-- 时间范围 -->\r\n                <el-col :span=\"8\">\r\n                  <el-form-item label=\"时间范围\">\r\n                    <el-date-picker\r\n                        v-model=\"queryForm.dateRange\"\r\n                        type=\"daterange\"\r\n                        range-separator=\"至\"\r\n                        start-placeholder=\"开始日期\"\r\n                        end-placeholder=\"结束日期\"\r\n                        value-format=\"YYYY-MM-DD\"\r\n                    />\r\n                  </el-form-item>\r\n                </el-col>\r\n              </el-row>\r\n            </el-col>\r\n\r\n            <!-- 右侧按钮 -->\r\n            <el-col :span=\"6\" class=\"button-group\">\r\n              <el-form-item>\r\n                <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\r\n                <el-button @click=\"handleReset\">重置</el-button>\r\n              </el-form-item>\r\n            </el-col>\r\n          </el-row>\r\n        </el-form>\r\n      </div>\r\n\r\n      <!-- 弹幕表格 -->\r\n      <el-table\r\n          :data=\"paginatedBarrages\"\r\n          style=\"width: 100%\"\r\n          border\r\n          :header-cell-style=\"{ background: 'var(--el-bg-color-page)', color: 'var(--el-text-color-primary)' }\"\r\n      >\r\n        <!-- 用户账号列 -->\r\n        <el-table-column prop=\"username\" label=\"用户账号\" width=\"150\" />\r\n\r\n        <!-- 用户头像列 -->\r\n        <el-table-column label=\"用户头像\" width=\"150\">\r\n          <template #default=\"{ row }\">\r\n            <el-avatar :src=\"row.avatar\" size=\"130\" />\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 用户昵称列 -->\r\n        <el-table-column prop=\"nickname\" label=\"用户昵称\" width=\"200\" />\r\n\r\n        <!-- 弹幕内容列 -->\r\n        <el-table-column prop=\"content\" label=\"弹幕内容\" width=\"300\" />\r\n\r\n        <!-- 弹幕发送时间列 -->\r\n        <el-table-column prop=\"createdAt\" label=\"发送时间\" width=\"200\">\r\n          <template #default=\"{ row }\">\r\n            {{ formatTime(row.createdAt) }}\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 操作列 -->\r\n        <el-table-column label=\"操作\" width=\"300\" fixed=\"right\">\r\n          <template #default=\"{ row }\">\r\n            <el-button type=\"danger\" size=\"default\" @click=\"handleDeleteBarrage(row)\">删除弹幕</el-button>\r\n            <el-button\r\n                :type=\"row.isBarrageBanned ? 'success' : 'warning'\"\r\n                size=\"default\"\r\n                @click=\"handleToggleBarrageBan(row)\"\r\n            >\r\n              {{ row.isBarrageBanned ? '恢复发送弹幕' : '禁止发送弹幕' }}\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页组件 -->\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"barrageList.length\"\r\n            :page-size=\"pageSize\"\r\n            :current-page=\"currentPage\"\r\n            :page-sizes=\"[5, 10, 20, 50]\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handlePageChange\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { ElMessage, ElMessageBox } from 'element-plus';\r\nimport axios from 'axios';\r\n\r\n// 弹幕列表数据\r\nconst barrageList = ref([]);\r\n\r\n// 查询表单数据\r\nconst queryForm = ref({\r\n  username: '', // 用户账号\r\n  nickname: '', // 用户昵称\r\n  dateRange: [], // 时间范围\r\n});\r\n\r\n// 分页相关状态\r\nconst currentPage = ref(1); // 当前页码\r\nconst pageSize = ref(10); // 每页显示条数\r\n\r\n// 分页后的弹幕列表\r\nconst paginatedBarrages = computed(() => {\r\n  const start = (currentPage.value - 1) * pageSize.value;\r\n  const end = start + pageSize.value;\r\n  return barrageList.value.slice(start, end);\r\n});\r\n\r\n// 时间格式化函数\r\nconst formatTime = (timestamp) => {\r\n  const date = new Date(timestamp); // 将时间戳转换为 Date 对象\r\n  const year = date.getFullYear(); // 获取年份\r\n  const month = String(date.getMonth() + 1).padStart(2, '0'); // 获取月份（补零）\r\n  const day = String(date.getDate()).padStart(2, '0'); // 获取日期（补零）\r\n  const hours = String(date.getHours()).padStart(2, '0'); // 获取小时（补零）\r\n  const minutes = String(date.getMinutes()).padStart(2, '0'); // 获取分钟（补零）\r\n  const seconds = String(date.getSeconds()).padStart(2, '0'); // 获取秒数（补零）\r\n\r\n  // 拼接成 YYYY-MM-DD HH:mm:ss 格式\r\n  return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n};\r\n\r\n// 获取弹幕数据\r\nconst fetchBarrages = async () => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    try {\r\n      const params = {\r\n        username: queryForm.value.username,\r\n        nickname: queryForm.value.nickname,\r\n        startDate: queryForm.value.dateRange?.[0],\r\n        endDate: queryForm.value.dateRange?.[1],\r\n      };\r\n\r\n      const response = await axios.get('/admin/barrages', {\r\n        params,\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.data.code === 200) {\r\n        barrageList.value = response.data.data;\r\n      } else {\r\n        console.error('获取弹幕列表失败:', response.data.msg);\r\n        ElMessage.error('获取弹幕列表失败');\r\n      }\r\n    } catch (error) {\r\n      console.error('获取弹幕列表失败:', error);\r\n      ElMessage.error('获取弹幕列表失败：' + error.message);\r\n    }\r\n  } else {\r\n    ElMessage.error('用户未登录，请先登录');\r\n  }\r\n};\r\n\r\n// 删除弹幕\r\nconst handleDeleteBarrage = async (barrage) => {\r\n  try {\r\n    // 确认删除操作\r\n    await ElMessageBox.confirm('确定要删除这条弹幕吗？', '提示', {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    });\r\n\r\n    // 从 localStorage 中获取令牌\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      ElMessage.error('用户未登录，请先登录');\r\n      return;\r\n    }\r\n\r\n    // 发送删除请求\r\n    await axios.delete(`/admin/barrages/${barrage.id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n    // 重新获取弹幕列表\r\n    await fetchBarrages();\r\n    ElMessage.success('删除成功');\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      ElMessage.error('删除失败: ' + error.message);\r\n    }\r\n  }\r\n};\r\n\r\n// 切换禁止/恢复发送弹幕状态\r\nconst handleToggleBarrageBan = async (barrage) => {\r\n  try {\r\n    const action = barrage.isBarrageBanned ? '恢复发送弹幕' : '禁止发送弹幕';\r\n    await ElMessageBox.confirm(`确定要${action}吗？`, '提示', {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    });\r\n\r\n    // 从 localStorage 中获取令牌\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      ElMessage.error('用户未登录，请先登录');\r\n      return;\r\n    }\r\n\r\n    // 发送更新请求\r\n    await axios.post(\r\n        `/admin/users/${barrage.userId}/toggle-barrage-ban`,\r\n        { isBarrageBanned: !barrage.isBarrageBanned },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n    );\r\n\r\n    // 重新获取弹幕列表\r\n    await fetchBarrages();\r\n    ElMessage.success(`${action}成功`);\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      ElMessage.error( error.message);\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// 处理查询\r\nconst handleQuery = () => {\r\n  currentPage.value = 1;\r\n  fetchBarrages(); // 根据查询条件获取数据\r\n};\r\n\r\n// 处理重置\r\nconst handleReset = () => {\r\n  queryForm.value = {\r\n    username: '',\r\n    nickname: '',\r\n    dateRange: [],\r\n  };\r\n  currentPage.value = 1;\r\n  fetchBarrages(); // 重置后获取全部数据\r\n};\r\n\r\n// 处理每页条数变化\r\nconst handleSizeChange = (size) => {\r\n  pageSize.value = size;\r\n  currentPage.value = 1;\r\n};\r\n\r\n// 处理页码变化\r\nconst handlePageChange = (page) => {\r\n  currentPage.value = page;\r\n};\r\n\r\n// 组件挂载时初始化数据\r\nonMounted(() => {\r\n  fetchBarrages(); // 页面加载时获取全部数据\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* 外层容器样式 */\r\n.barrage-container {\r\n  border: 1px solid var(--el-border-color-light);\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n}\r\n\r\n/* 弹幕列表模块样式 */\r\n.barrage-list {\r\n  width: 100%;\r\n}\r\n\r\n/* 查询表单容器样式 */\r\n.query-form-container {\r\n  background-color: var(--el-bg-color-page);\r\n  padding: 20px;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* 按钮组样式 */\r\n.button-group {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n/* 设置表格容器的宽度和溢出滚动 */\r\n.el-table {\r\n  width: 100%;\r\n  overflow-x: auto;\r\n}\r\n\r\n/* 分页样式 */\r\n.pagination {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n</style>\r\n","import script from \"./BarragePage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BarragePage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BarragePage.vue?vue&type=style&index=0&id=fd2fa368&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-fd2fa368\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"carousel-container\">\r\n    <!-- 轮播图列表模块 -->\r\n    <div class=\"carousel-list\">\r\n      <!-- 操作栏 -->\r\n      <div class=\"action-bar\">\r\n        <!-- 添加按钮 -->\r\n        <el-button type=\"primary\" @click=\"handleAdd\">添加</el-button>\r\n        <!-- 一键删除按钮 -->\r\n        <el-button\r\n            type=\"danger\"\r\n            :disabled=\"selectedCarousels.length === 0\"\r\n            @click=\"handleBatchDelete\"\r\n        >\r\n          一键删除\r\n        </el-button>\r\n      </div>\r\n\r\n      <!-- 轮播图表格 -->\r\n      <el-table\r\n          :data=\"carouselList\"\r\n          style=\"width: 100%\"\r\n          border\r\n          @selection-change=\"handleSelectionChange\"\r\n          :header-cell-style=\"{ background: 'var(--el-bg-color-page)', color: 'var(--el-text-color-primary)' }\"\r\n      >\r\n        <!-- 多选列 -->\r\n        <el-table-column type=\"selection\" width=\"55\" />\r\n\r\n        <!-- 排序列 -->\r\n        <el-table-column prop=\"sort\" label=\"排序号\" width=\"100\" />\r\n\r\n        <!-- 轮播图列 -->\r\n        <el-table-column label=\"轮播图\" width=\"450\">\r\n          <template #default=\"{ row }\">\r\n            <el-image\r\n                style=\"width: 400px; height: 150px; border-radius: 4px\"\r\n                :src=\"row.imageUrl\"\r\n                fit=\"cover\"\r\n            />\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 绑定项目名称列 -->\r\n        <el-table-column prop=\"projectName\" label=\"绑定项目名称\" />\r\n\r\n        <!-- 创建时间列 -->\r\n        <el-table-column prop=\"createdAt\" label=\"创建时间\" width=\"180\">\r\n          <template #default=\"{ row }\">\r\n            {{ formatDate(row.createdAt) }}\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 更新时间列 -->\r\n        <el-table-column prop=\"updatedAt\" label=\"更新时间\" width=\"180\">\r\n          <template #default=\"{ row }\">\r\n            {{ formatDate(row.updatedAt) }}\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 操作列（固定在右侧） -->\r\n        <el-table-column label=\"操作\" width=\"120\" fixed=\"right\">\r\n          <template #default=\"{ row }\">\r\n            <el-button type=\"primary\" size=\"default\" @click=\"handleEdit(row)\">更新</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n\r\n    <!-- 编辑/添加抽屉 -->\r\n    <el-drawer\r\n        v-model=\"drawerVisible\"\r\n        :title=\"isEdit ? '编辑轮播图' : '添加轮播图'\"\r\n        direction=\"rtl\"\r\n        size=\"40%\"\r\n    >\r\n      <el-form :model=\"formData\" label-width=\"120px\">\r\n        <el-form-item label=\"排序号\">\r\n          <el-input v-model=\"formData.sort\" placeholder=\"请输入排序号\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"轮播图\">\r\n          <!-- 自定义图片上传组件 -->\r\n          <div class=\"custom-upload\">\r\n            <!-- 上传按钮 -->\r\n            <div v-if=\"!formData.imageUrl\" class=\"upload-area\" @click=\"triggerFileInput\">\r\n              <el-icon><Plus /></el-icon>\r\n              <span>点击上传图片</span>\r\n            </div>\r\n\r\n            <!-- 图片预览 -->\r\n            <div v-else class=\"image-preview\">\r\n              <img :src=\"formData.imageUrl\" alt=\"Preview Image\" @click=\"triggerFileInput\" />\r\n              <div class=\"image-actions\">\r\n                <!-- 预览图标 -->\r\n                <el-icon class=\"preview-icon\" @click.stop=\"handlePreview\">\r\n                  <ZoomIn />\r\n                </el-icon>\r\n                <!-- 删除图标 -->\r\n                <el-icon class=\"delete-icon\" @click.stop=\"handleDeleteImage\">\r\n                  <Delete />\r\n                </el-icon>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- 文件选择输入框 -->\r\n            <input\r\n                ref=\"fileInput\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                style=\"display: none\"\r\n                @change=\"handleFileChange\"\r\n            />\r\n          </div>\r\n        </el-form-item>\r\n        <el-form-item label=\"绑定项目\">\r\n          <el-select\r\n              v-model=\"formData.projectId\"\r\n              placeholder=\"请选择绑定项目\"\r\n              clearable\r\n          >\r\n            <el-option\r\n                v-for=\"project in projectList\"\r\n                :key=\"project.id\"\r\n                :label=\"project.title\"\r\n                :value=\"project.id\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"drawerVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\">{{ isEdit ? '保存' : '添加' }}</el-button>\r\n      </template>\r\n    </el-drawer>\r\n\r\n    <!-- 图片预览对话框 -->\r\n    <el-dialog v-model=\"previewVisible\" title=\"图片预览\" width=\"50%\">\r\n      <img :src=\"previewImageUrl\" alt=\"Preview Image\" style=\"width: 100%\" />\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport { ElMessage, ElMessageBox } from 'element-plus';\r\nimport { Delete, Plus, ZoomIn } from '@element-plus/icons-vue';\r\nimport axios from 'axios';\r\n\r\n// 从 localStorage 中获取令牌\r\nconst getToken = () => {\r\n  return localStorage.getItem('token'); // 假设令牌存储在 localStorage 中\r\n};\r\n\r\n// 轮播图列表数据\r\nconst carouselList = ref([]);\r\n\r\n// 项目列表数据\r\nconst projectList = ref([]);\r\n\r\n// 选中的轮播图\r\nconst selectedCarousels = ref([]);\r\n\r\n// 编辑/添加抽屉相关状态\r\nconst drawerVisible = ref(false);\r\nconst isEdit = ref(false); // 是否为编辑模式\r\nconst formData = ref({\r\n  id: '',\r\n  sort: 0, // 排序号\r\n  imageUrl: '', // 轮播图 URL（与后端一致）\r\n  projectId: '', // 绑定的项目ID（与后端一致）\r\n});\r\n\r\n// 图片预览相关状态\r\nconst previewImageUrl = ref('');\r\nconst previewVisible = ref(false);\r\n\r\n// 文件输入框引用\r\nconst fileInput = ref(null);\r\n\r\n// 格式化日期\r\nconst formatDate = (timestamp) => {\r\n  if (!timestamp) return '';\r\n  const date = new Date(timestamp);\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, '0');\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  const hours = String(date.getHours()).padStart(2, '0');\r\n  const minutes = String(date.getMinutes()).padStart(2, '0');\r\n  const seconds = String(date.getSeconds()).padStart(2, '0');\r\n  return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n};\r\n\r\n// 获取轮播图列表\r\nconst fetchCarouselList = async () => {\r\n  try {\r\n    const token = getToken();\r\n    if (!token) {\r\n      ElMessage.error('用户未登录，请先登录');\r\n      return;\r\n    }\r\n\r\n    const response = await axios.get('/admin/carousel/list', {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`, // 添加令牌到请求头\r\n      },\r\n    });\r\n    if (response.data.code === 200) {\r\n      carouselList.value = response.data.data;\r\n    } else {\r\n      console.error('获取轮播图列表失败:', response.data.msg);\r\n    }\r\n  } catch (error) {\r\n    console.error('获取轮播图列表失败:', error);\r\n  }\r\n};\r\n\r\n// 获取项目列表\r\nconst fetchProjectList = async () => {\r\n  try {\r\n    const token = getToken();\r\n    if (!token) {\r\n      ElMessage.error('用户未登录，请先登录');\r\n      return;\r\n    }\r\n\r\n    const response = await axios.get('/admin/projects', {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`, // 添加令牌到请求头\r\n      },\r\n    });\r\n    if (response.data.code === 200) {\r\n      // 提取项目的 title 和 id\r\n      projectList.value = response.data.data.map((project) => ({\r\n        id: project.id,\r\n        title: project.title,\r\n      }));\r\n    } else {\r\n      console.error('获取项目列表失败:', response.data.msg);\r\n    }\r\n  } catch (error) {\r\n    console.error('获取项目列表失败:', error);\r\n  }\r\n};\r\n\r\n// 处理选中轮播图\r\nconst handleSelectionChange = (selection) => {\r\n  selectedCarousels.value = selection;\r\n};\r\n\r\n// 添加轮播图\r\nconst handleAdd = () => {\r\n  isEdit.value = false;\r\n  formData.value = {\r\n    id: '',\r\n    sort: 0,\r\n    imageUrl: '',\r\n    projectId: '',\r\n  };\r\n  drawerVisible.value = true;\r\n};\r\n\r\n// 编辑轮播图\r\nconst handleEdit = (row) => {\r\n  isEdit.value = true;\r\n  formData.value = { ...row };\r\n  drawerVisible.value = true;\r\n};\r\n\r\n// 批量删除轮播图\r\nconst handleBatchDelete = async () => {\r\n  try {\r\n    await ElMessageBox.confirm('确定要删除选中的轮播图吗？', '提示', {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    });\r\n\r\n    const token = getToken();\r\n    if (!token) {\r\n      ElMessage.error('用户未登录，请先登录');\r\n      return;\r\n    }\r\n\r\n    const selectedIds = selectedCarousels.value.map((item) => item.id);\r\n    const response = await axios.post(\r\n        '/admin/carousel/batch-delete',\r\n        { ids: selectedIds },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`, // 添加令牌到请求头\r\n          },\r\n        }\r\n    );\r\n    if (response.data.code === 200) {\r\n      ElMessage.success('删除成功');\r\n      await fetchCarouselList(); // 刷新列表\r\n    } else {\r\n      ElMessage.error('删除失败');\r\n    }\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      ElMessage.error('删除失败: ' + error.message);\r\n    }\r\n  }\r\n};\r\n\r\n// 提交表单（添加或编辑）\r\nconst handleSubmit = async () => {\r\n  try {\r\n    console.log(\"Form Data:\", formData.value); // 打印 formData\r\n    const token = getToken();\r\n    if (!token) {\r\n      ElMessage.error('用户未登录，请先登录');\r\n      return;\r\n    }\r\n\r\n    if (isEdit.value) {\r\n      // 编辑逻辑\r\n      const response = await axios.put(\r\n          `/admin/carousel/update/${formData.value.id}`,\r\n          formData.value,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`, // 添加令牌到请求头\r\n            },\r\n          }\r\n      );\r\n      if (response.data.code === 200) {\r\n        ElMessage.success('编辑成功');\r\n        await fetchCarouselList(); // 刷新列表\r\n      }\r\n    } else {\r\n      // 添加逻辑\r\n      const response = await axios.post(\r\n          '/admin/carousel/add',\r\n          formData.value,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`, // 添加令牌到请求头\r\n            },\r\n          }\r\n      );\r\n      if (response.data.code === 200) {\r\n        ElMessage.success('添加成功');\r\n        await fetchCarouselList(); // 刷新列表\r\n      }\r\n    }\r\n    drawerVisible.value = false; // 关闭抽屉\r\n  } catch (error) {\r\n    ElMessage.error('操作失败: ' + error.message);\r\n  }\r\n};\r\n\r\n// 触发文件选择\r\nconst triggerFileInput = () => {\r\n  fileInput.value.click();\r\n};\r\n\r\n// 处理文件选择\r\nconst handleFileChange = async (event) => {\r\n  const file = event.target.files[0];\r\n  if (!file) return;\r\n\r\n  // 校验文件类型和大小\r\n  if (!file.type.startsWith('image/')) {\r\n    ElMessage.error('只能上传图片文件！');\r\n    return;\r\n  }\r\n  if (file.size > 2 * 1024 * 1024) {\r\n    ElMessage.error('图片大小不能超过 2MB！');\r\n    return;\r\n  }\r\n\r\n  // 上传图片到服务器\r\n  try {\r\n    const uploadFormData = new FormData(); // 重命名为 uploadFormData\r\n    uploadFormData.append('file', file);\r\n\r\n    const response = await axios.post('/files/upload', uploadFormData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data', // 确保正确设置 Content-Type\r\n      },\r\n    });\r\n\r\n    console.log(\"Upload Response:\", response.data); // 打印上传响应\r\n\r\n    if (response.data.code === 200) {\r\n      // 绑定服务器返回的图片 URL\r\n      formData.value.imageUrl = response.data.data; // 使用外部的 formData\r\n      console.log(\"Image URL:\", formData.value.imageUrl); // 打印图片 URL\r\n      ElMessage.success('图片上传成功');\r\n    } else {\r\n      ElMessage.error('图片上传失败: ' + response.data.msg);\r\n    }\r\n  } catch (error) {\r\n    console.error('图片上传失败:', error);\r\n    ElMessage.error('图片上传失败: ' + error.message);\r\n  }\r\n};\r\n\r\n// 图片预览\r\nconst handlePreview = () => {\r\n  previewImageUrl.value = formData.value.imageUrl;\r\n  previewVisible.value = true;\r\n};\r\n\r\n// 删除图片\r\nconst handleDeleteImage = () => {\r\n  formData.value.imageUrl = '';\r\n  fileInput.value.value = ''; // 清空文件输入框\r\n};\r\n\r\n// 组件挂载时获取数据\r\nonMounted(() => {\r\n  fetchCarouselList();\r\n  fetchProjectList(); // 获取项目列表\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.carousel-container {\r\n  border: 1px solid var(--el-border-color-light);\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n}\r\n\r\n.action-bar {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.el-table {\r\n  width: 100%;\r\n  overflow-x: auto;\r\n}\r\n\r\n.custom-upload {\r\n  display: inline-block;\r\n}\r\n\r\n.upload-area {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 150px;\r\n  height: 150px;\r\n  border: 1px dashed var(--el-border-color);\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  background-color: var(--el-bg-color-page);\r\n  transition: border-color 0.3s;\r\n}\r\n\r\n.upload-area:hover {\r\n  border-color: var(--el-color-primary);\r\n}\r\n\r\n.upload-area .el-icon {\r\n  font-size: 24px;\r\n  color: var(--el-color-primary);\r\n}\r\n\r\n.upload-area span {\r\n  margin-top: 8px;\r\n  font-size: 14px;\r\n  color: var(--el-text-color-regular);\r\n}\r\n\r\n.image-preview {\r\n  display: flex;\r\n  position: relative;\r\n  width: 400px;\r\n  height: 150px;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n}\r\n\r\n.image-preview img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.image-actions {\r\n  position: absolute;\r\n  top: 8px;\r\n  right: 8px;\r\n  display: flex;\r\n  gap: 8px;\r\n}\r\n\r\n.preview-icon,\r\n.delete-icon {\r\n  font-size: 18px;\r\n  color: white;\r\n  cursor: pointer;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  border-radius: 50%;\r\n  padding: 4px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.preview-icon:hover,\r\n.delete-icon:hover {\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n}\r\n</style>\r\n","import script from \"./CarouselList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CarouselList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CarouselList.vue?vue&type=style&index=0&id=d95aea6c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-d95aea6c\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"public-info-container\">\r\n    <!-- 公示信息列表模块 -->\r\n    <div class=\"public-info-list\">\r\n      <!-- 公示信息表格 -->\r\n      <el-table\r\n          :data=\"publicInfoList\"\r\n          style=\"width: 100%\"\r\n          border\r\n          :header-cell-style=\"{ background: 'var(--el-bg-color-page)', color: 'var(--el-text-color-primary)' }\"\r\n      >\r\n        <!-- 类型列 -->\r\n        <el-table-column prop=\"type\" label=\"类型\" width=\"120\">\r\n          <template #default=\"{ row }\">\r\n            {{ getTypeText(row.type) }}\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 文件 URL 列 -->\r\n        <el-table-column label=\"文件 URL\" width=\"300\">\r\n          <template #default=\"{ row }\">\r\n            <el-link type=\"primary\" @click=\"handleViewPdf(row.fileUrl)\">查看文件</el-link>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 图片列 -->\r\n        <el-table-column label=\"图片\" width=\"300\">\r\n          <template #default=\"{ row }\">\r\n            <el-image\r\n                style=\"width: 275px; height: 113px\"\r\n                :src=\"row.imageUrl\"\r\n                fit=\"cover\"\r\n                :preview-src-list=\"[row.imageUrl]\"\r\n            />\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 创建时间列 -->\r\n        <el-table-column prop=\"createdAt\" label=\"创建时间\" width=\"180\">\r\n          <template #default=\"{ row }\">\r\n            {{ formatDate(row.createdAt) }}\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 更新时间列 -->\r\n        <el-table-column prop=\"updatedAt\" label=\"上次更新时间\" width=\"180\">\r\n          <template #default=\"{ row }\">\r\n            {{ formatDate(row.updatedAt) }}\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 操作列 -->\r\n        <el-table-column label=\"操作\" width=\"134\">\r\n          <template #default=\"{ row }\">\r\n            <el-button type=\"primary\" size=\"default\" @click=\"handleEdit(row)\">更新</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n\r\n    <!-- 编辑抽屉 -->\r\n    <el-drawer\r\n        v-model=\"drawerVisible\"\r\n        :title=\"'更新公示信息'\"\r\n        direction=\"rtl\"\r\n        size=\"40%\"\r\n    >\r\n      <el-form :model=\"formData\" label-width=\"120px\">\r\n        <!-- 文件上传 -->\r\n        <el-form-item label=\"文件\">\r\n          <div class=\"custom-upload\">\r\n            <!-- 上传按钮 -->\r\n            <div v-if=\"!formData.fileUrl\" class=\"upload-area\" @click=\"triggerFileInput\">\r\n              <el-icon><Plus /></el-icon>\r\n              <span>点击上传文件</span>\r\n            </div>\r\n\r\n            <!-- 文件预览 -->\r\n            <div v-else class=\"file-preview\">\r\n              <el-link type=\"primary\" @click=\"handleViewPdf(formData.fileUrl)\">查看文件</el-link>\r\n              <div class=\"file-actions\">\r\n                <!-- 删除图标 -->\r\n                <el-icon class=\"delete-icon\" @click.stop=\"handleDeleteFile\">\r\n                  <Delete />\r\n                </el-icon>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- 文件选择输入框 -->\r\n            <input\r\n                ref=\"fileInput\"\r\n                type=\"file\"\r\n                accept=\".pdf\"\r\n                style=\"display: none\"\r\n                @change=\"handleFileChange\"\r\n            />\r\n          </div>\r\n        </el-form-item>\r\n\r\n        <!-- 图片上传 -->\r\n        <el-form-item label=\"图片\">\r\n          <div class=\"custom-upload\">\r\n            <!-- 上传按钮 -->\r\n            <div v-if=\"!formData.imageUrl\" class=\"upload-area\" @click=\"triggerImageInput\">\r\n              <el-icon><Plus /></el-icon>\r\n              <span>点击上传图片</span>\r\n            </div>\r\n\r\n            <!-- 图片预览 -->\r\n            <div v-else class=\"image-preview\">\r\n              <el-image\r\n                  style=\"width: 275px; height: 113px\"\r\n                  :src=\"formData.imageUrl\"\r\n                  fit=\"cover\"\r\n              />\r\n              <div class=\"file-actions\">\r\n                <!-- 删除图标 -->\r\n                <el-icon class=\"delete-icon\" @click.stop=\"handleDeleteImage\">\r\n                  <Delete />\r\n                </el-icon>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- 图片选择输入框 -->\r\n            <input\r\n                ref=\"imageInput\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                style=\"display: none\"\r\n                @change=\"handleImageChange\"\r\n            />\r\n          </div>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"drawerVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\">保存</el-button>\r\n      </template>\r\n    </el-drawer>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport { ElMessage } from 'element-plus';\r\nimport { Delete, Plus } from '@element-plus/icons-vue';\r\nimport axios from 'axios';\r\n\r\n// 从 localStorage 中获取令牌\r\nconst getToken = () => {\r\n  return localStorage.getItem('token'); // 假设令牌存储在 localStorage 中\r\n};\r\n\r\n// 公示信息列表数据\r\nconst publicInfoList = ref([]);\r\n\r\n// 编辑抽屉相关状态\r\nconst drawerVisible = ref(false);\r\nconst formData = ref({\r\n  id: '',\r\n  type: 0,\r\n  fileUrl: '',\r\n  imageUrl: '', // 图片 URL\r\n});\r\n\r\n// 文件输入框引用\r\nconst fileInput = ref(null);\r\nconst imageInput = ref(null);\r\n\r\n// 格式化日期\r\nconst formatDate = (timestamp) => {\r\n  if (!timestamp) return '';\r\n  const date = new Date(timestamp);\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, '0');\r\n  const day = String(date.getDate()).padStart(2, '0');\r\n  const hours = String(date.getHours()).padStart(2, '0');\r\n  const minutes = String(date.getMinutes()).padStart(2, '0');\r\n  const seconds = String(date.getSeconds()).padStart(2, '0');\r\n  return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n};\r\n\r\n// 获取类型文本\r\nconst getTypeText = (type) => {\r\n  const typeTexts = ['年会报告', '审计报告', '慈善年鉴', '专享报告'];\r\n  return typeTexts[type - 1] || '';\r\n};\r\n\r\n// 查看 PDF 文件（直接下载）\r\nconst handleViewPdf = (fileUrl) => {\r\n  const link = document.createElement('a');\r\n  link.href = fileUrl;\r\n  link.download = fileUrl.split('/').pop(); // 使用文件 URL 的最后一部分作为文件名\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n};\r\n\r\n// 编辑公示信息\r\nconst handleEdit = (row) => {\r\n  formData.value = { ...row }; // 绑定当前行的数据\r\n  drawerVisible.value = true; // 打开编辑抽屉\r\n};\r\n\r\n// 提交表单（更新）\r\nconst handleSubmit = async () => {\r\n  try {\r\n    const token = getToken();\r\n    if (!token) {\r\n      ElMessage.error('用户未登录，请先登录');\r\n      return;\r\n    }\r\n\r\n    // 提交更新请求\r\n    const response = await axios.put(\r\n        `/admin/public-info/update/${formData.value.id}`, // 传递 id\r\n        {\r\n          type: formData.value.type, // 传递 type\r\n          fileUrl: formData.value.fileUrl, // 传递新的文件 URL\r\n          imageUrl: formData.value.imageUrl, // 传递新的图片 URL\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n    );\r\n\r\n    if (response.data.code === 200) {\r\n      ElMessage.success('更新成功');\r\n      fetchPublicInfoList(); // 刷新列表\r\n      drawerVisible.value = false; // 关闭抽屉\r\n    } else {\r\n      ElMessage.error('更新失败');\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error('操作失败: ' + error.message);\r\n  }\r\n};\r\n\r\n// 触发文件选择\r\nconst triggerFileInput = () => {\r\n  fileInput.value.click();\r\n};\r\n\r\n// 触发图片选择\r\nconst triggerImageInput = () => {\r\n  imageInput.value.click();\r\n};\r\n\r\n// 处理文件选择\r\nconst handleFileChange = async (event) => {\r\n  const file = event.target.files[0];\r\n  if (!file) return;\r\n\r\n  // 校验文件类型\r\n  if (file.type !== 'application/pdf') {\r\n    ElMessage.error('只能上传 PDF 文件！');\r\n    return;\r\n  }\r\n\r\n  // 上传文件到服务器\r\n  try {\r\n    const uploadFormData = new FormData();\r\n    uploadFormData.append('file', file);\r\n\r\n    const response = await axios.post('/files/upload', uploadFormData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n\r\n    if (response.data.code === 200) {\r\n      formData.value.fileUrl = response.data.data; // 绑定服务器返回的文件 URL\r\n      ElMessage.success('文件上传成功');\r\n    } else {\r\n      ElMessage.error('文件上传失败: ' + response.data.msg);\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error('文件上传失败: ' + error.message);\r\n  }\r\n};\r\n\r\n// 处理图片选择\r\nconst handleImageChange = async (event) => {\r\n  const file = event.target.files[0];\r\n  if (!file) return;\r\n\r\n  // 校验文件类型\r\n  if (!file.type.startsWith('image/')) {\r\n    ElMessage.error('只能上传图片文件！');\r\n    return;\r\n  }\r\n\r\n  // 上传图片到服务器\r\n  try {\r\n    const uploadFormData = new FormData();\r\n    uploadFormData.append('file', file);\r\n\r\n    const response = await axios.post('/files/upload', uploadFormData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n\r\n    if (response.data.code === 200) {\r\n      formData.value.imageUrl = response.data.data; // 绑定服务器返回的图片 URL\r\n      ElMessage.success('图片上传成功');\r\n    } else {\r\n      ElMessage.error('图片上传失败: ' + response.data.msg);\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error('图片上传失败: ' + error.message);\r\n  }\r\n};\r\n\r\n// 删除文件\r\nconst handleDeleteFile = () => {\r\n  formData.value.fileUrl = '';\r\n  fileInput.value.value = ''; // 清空文件输入框\r\n};\r\n\r\n// 删除图片\r\nconst handleDeleteImage = () => {\r\n  formData.value.imageUrl = '';\r\n  imageInput.value.value = ''; // 清空图片输入框\r\n};\r\n\r\n// 获取公示信息列表\r\nconst fetchPublicInfoList = async () => {\r\n  try {\r\n    const token = getToken();\r\n    if (!token) {\r\n      ElMessage.error('用户未登录，请先登录');\r\n      return;\r\n    }\r\n\r\n    const response = await axios.get('/admin/public-info/list', {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    if (response.data.code === 200) {\r\n      publicInfoList.value = response.data.data;\r\n    } else {\r\n      console.error('获取公示信息列表失败:', response.data.msg);\r\n    }\r\n  } catch (error) {\r\n    console.error('获取公示信息列表失败:', error);\r\n  }\r\n};\r\n\r\n// 组件挂载时获取数据\r\nonMounted(() => {\r\n  fetchPublicInfoList();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.public-info-container {\r\n  border: 1px solid var(--el-border-color-light);\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n}\r\n\r\n.custom-upload {\r\n  display: inline-block;\r\n}\r\n\r\n.upload-area {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 150px;\r\n  height: 150px;\r\n  border: 1px dashed var(--el-border-color);\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  background-color: var(--el-bg-color-page);\r\n  transition: border-color 0.3s;\r\n}\r\n\r\n.upload-area:hover {\r\n  border-color: var(--el-color-primary);\r\n}\r\n\r\n.upload-area .el-icon {\r\n  font-size: 24px;\r\n  color: var(--el-color-primary);\r\n}\r\n\r\n.upload-area span {\r\n  margin-top: 8px;\r\n  font-size: 14px;\r\n  color: var(--el-text-color-regular);\r\n}\r\n\r\n.file-preview {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.file-actions {\r\n  margin-left: 100px;\r\n  display: flex;\r\n  gap: 8px;\r\n}\r\n\r\n.delete-icon {\r\n  font-size: 18px;\r\n  color: var(--el-color-danger);\r\n  cursor: pointer;\r\n}\r\n</style>\r\n","import script from \"./AnnouncementList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AnnouncementList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AnnouncementList.vue?vue&type=style&index=0&id=0368580e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0368580e\"]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router';\r\nimport HomePage from '@/views/HomePage.vue';\r\nimport UserList from '@/views/UserList.vue';\r\nimport UserMessages from '@/views/UserMessages.vue';\r\nimport NewsList from '@/views/NewsList.vue';\r\nimport ProjectList from '@/views/ProjectList.vue';\r\nimport ProjectIncome from '@/views/ProjectIncome.vue';\r\nimport ProjectReview from '@/views/ProjectReview.vue';\r\nimport LoginPage from '@/views/LoginPage.vue';\r\nimport BarragePage from '@/views/BarragePage.vue'; // 弹幕管理\r\nimport CarouselList from '@/views/CarouselList.vue'; // 轮播管理\r\nimport AnnouncementList from '@/views/AnnouncementList.vue'; // 公示信息管理\r\n\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        component: HomePage,\r\n        meta: { title: '首页', showNavBar: true },\r\n    },\r\n    {\r\n        path: '/user/list',\r\n        component: UserList,\r\n        meta: { title: '用户列表', showNavBar: true },\r\n    },\r\n    {\r\n        path: '/user/messages',\r\n        component: UserMessages,\r\n        meta: { title: '用户消息', showNavBar: true },\r\n    },\r\n    {\r\n        path: '/news/list',\r\n        component: NewsList,\r\n        meta: { title: '新闻列表', showNavBar: true },\r\n    },\r\n    {\r\n        path: '/project/list',\r\n        component: ProjectList,\r\n        meta: { title: '项目列表', showNavBar: true },\r\n    },\r\n    {\r\n        path: '/project/income',\r\n        component: ProjectIncome,\r\n        meta: { title: '项目收入', showNavBar: true },\r\n    },\r\n    {\r\n        path: '/project/review',\r\n        component: ProjectReview,\r\n        meta: { title: '项目评价', showNavBar: true },\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: LoginPage,\r\n        meta: { title: '登录', showNavBar: false },\r\n    },\r\n    {\r\n        path: '/project/barrage',\r\n        component: BarragePage,\r\n        meta: { title: '弹幕管理', showNavBar: true },\r\n    },\r\n    // 新增：轮播管理\r\n    {\r\n        path: '/other-config/carousel',\r\n        component: CarouselList,\r\n        meta: { title: '轮播管理', showNavBar: true },\r\n    },\r\n    // 新增：公示信息管理\r\n    {\r\n        path: '/other-config/announcement',\r\n        component: AnnouncementList,\r\n        meta: { title: '公示信息管理', showNavBar: true },\r\n    },\r\n];\r\n\r\nconst router = createRouter({\r\n    history: createWebHistory(),\r\n    routes,\r\n});\r\n\r\nexport default router;\r\n","import { createApp } from 'vue';\nimport App from './App.vue';\nimport ElementPlus from 'element-plus';\nimport 'element-plus/dist/index.css';\nimport 'element-plus/theme-chalk/dark/css-vars.css';\nimport zhCn from 'element-plus/dist/locale/zh-cn.mjs'; // 更新后的路径\nimport router from './router'; // 引入路由配置\n\nconst app = createApp(App);\n\n// 使用 ElementPlus 并设置语言为中文\napp.use(ElementPlus, {\n    locale: zhCn,\n});\n\napp.use(router); // 使用路由\n\n// 定义全局方法\napp.config.globalProperties.$connectWebSocket = (url, uuid) => {\n    const socket = new WebSocket(`${url}?uuid=${uuid}`);\n\n    socket.onopen = () => {\n        console.log('WebSocket 连接已建立');\n    };\n\n    socket.onmessage = (event) => {\n        console.log('收到消息:', event.data);\n        // 处理收到的消息\n    };\n\n    socket.onclose = () => {\n        console.log('WebSocket 连接已关闭');\n    };\n\n    socket.onerror = (error) => {\n        console.error('WebSocket 错误:', error);\n    };\n};\n\napp.mount('#app');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunktemplate_admin\"] = self[\"webpackChunktemplate_admin\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(6184); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["src","_imports_0","alt","width","height","_createElementBlock","_hoisted_1","script","__exports__","render","projectName","isDark","useDark","toggleDark","useToggle","user","ref","name","avatar","isCollapse","toggleCollapse","value","handleOpen","key","keyPath","console","log","handleClose","route","useRoute","currentRouteTitle","computed","meta","title","handleMessages","router","push","handleLogout","localStorage","removeItem","unreadCount","handleBellClick","useRouter","checkTokenAndFetchUser","async","token","getItem","response","axios","get","headers","Authorization","data","code","nickname","avatarUrl","error","msg","isLoggedIn","socket","isConnected","connectWebSocket","url","uuid","WebSocket","onopen","onmessage","event","message","JSON","parse","type","ElNotification","icon","LoadingIcon","duration","audio","Audio","require","play","catch","onclose","setTimeout","onerror","onMounted","window","addEventListener","close","proxy","getCurrentInstance","loginUsername","loginPassword","handleLogin","post","username","password","setItem","position","$connectWebSocket","isLoginPage","path","stats","userCount","donationTotal","barrageCount","trendData","dates","barrages","newUsers","donationTrendData","donations","donationRanking","trendChartRef","donationChartRef","getToken","fetchStats","status","Error","fetchTrendData","fetchDonationTrendData","fetchDonationRanking","initTrendChart","trendChart","echarts","setOption","tooltip","trigger","legend","xAxis","yAxis","series","initDonationChart","donationChart","downloadChart","chartType","chartInstance","imgUrl","getDataURL","pixelRatio","backgroundColor","link","document","createElement","href","download","body","appendChild","click","removeChild","initData","trendResponse","donationTrendResponse","location","userList","queryForm","email","phone","currentPage","pageSize","selectedUsers","drawerVisible","formData","avatarDialogVisible","currentAvatar","paginatedUsers","start","end","slice","formatDate","dateArray","Array","isArray","length","year","month","day","hours","minutes","seconds","date","Date","formattedYear","getFullYear","formattedMonth","String","getMonth","padStart","formattedDay","getDate","formattedHours","getHours","formattedMinutes","getMinutes","formattedSeconds","getSeconds","handleAvatarClick","fetchUsers","ElMessage","params","handleBan","action","isBanned","ElMessageBox","confirm","confirmButtonText","cancelButtonText","id","success","handleEdit","handleSubmit","put","handleSelectionChange","selection","handleBatchDelete","selectedIds","map","handleQuery","handleReset","handleSizeChange","size","handlePageChange","page","messageList","dateRange","selectedMessages","messageDialogVisible","currentMessage","paginatedMessages","fetchMessageList","startDate","endDate","item","createTime","formatDateTimeFromArray","projectTitle","projectImage","hour","minute","second","pad","num","toString","formattedDate","formattedTime","handleViewMessage","newsList","publisher","selectedNews","viewDialogVisible","currentNews","isEdit","coverUrl","content","paginatedNews","fetchNews","news","isRecommended","handleRecommendChange","recommendedCount","filter","row","warning","timestamp","handleView","handleAdd","fileInput","triggerFileInput","handleFileChange","file","target","files","startsWith","maxSize","uploadFormData","FormData","append","getTypeTag","getTypeLabel","projectList","recordNumber","category","selectedProjects","currentProject","targetAmount","raisedAmount","donationCount","orgInfo","initiator","receiver","executor","projectInfo","purpose","cost","surplusPlan","invoiceMethod","contact","fundUsage","beneficiaries","leader","details","image","paginatedProjects","getCategoryLabel","categoryMap","fetchProjects","project","toISOString","split","formRules","required","formRef","validate","payload","getTime","financeRecords","address","paymentMethod","paginatedRecords","toLocaleString","fetchFinanceRecords","handleExport","amount","toFixed","time","isForeign","worksheet","XLSX","aoa_to_sheet","workbook","book_new","book_append_sheet","reviewList","reviewer","selectedReviews","currentReview","paginatedReviews","fetchReviews","review","handleToggleBan","debounce","barrageList","paginatedBarrages","formatTime","fetchBarrages","handleDeleteBarrage","delete","barrage","handleToggleBarrageBan","isBarrageBanned","userId","carouselList","selectedCarousels","sort","imageUrl","projectId","previewImageUrl","previewVisible","fetchCarouselList","fetchProjectList","ids","handlePreview","handleDeleteImage","publicInfoList","fileUrl","imageInput","getTypeText","typeTexts","handleViewPdf","pop","fetchPublicInfoList","triggerImageInput","handleImageChange","handleDeleteFile","routes","component","HomePage","showNavBar","UserList","UserMessages","NewsList","ProjectList","ProjectIncome","ProjectReview","LoginPage","BarragePage","CarouselList","AnnouncementList","createRouter","history","createWebHistory","app","createApp","App","use","ElementPlus","locale","zhCn","config","globalProperties","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}